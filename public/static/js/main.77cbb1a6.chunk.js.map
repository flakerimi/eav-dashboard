{"version":3,"sources":["selectors/entity.js","components/FallbackLoading.js","selectors/index.js","components/Header.js","components/SideBar.js","containers/App.js","reducers/entity.js","reducers/attribute.js","reducers/set.js","reducers/group.js","reducers/cockpit.js","reducers/index.js","sagas/entity.js","sagas/attribute.js","sagas/group.js","sagas/cockpit.js","sagas/index.js","configureStore.js","root.js","serviceWorker.js","index.js","actions/index.js","selectors/cockpit.js","config.js","utils/request.js","utils/jsonapi.js","utils/WebAPI.js","utils/common.js","contexts/Responsive.js"],"names":["__webpack_require__","d","__webpack_exports__","selectEntities","selectGroups","selectGroupAttributes","selectAttributes","immutable__WEBPACK_IMPORTED_MODULE_0__","state","app","get","id","getIn","List","code","Spin","styled","div","_templateObject","FallbackLoading","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","antd_es_icon__WEBPACK_IMPORTED_MODULE_1__","type","style","fontSize","color","_cockpit__WEBPACK_IMPORTED_MODULE_0__","MenuIcon","icon","DropdownWrapper","dropdown","_templateObject2","HeaderWrapper","layout","Header","_templateObject3","_this","this","menu","react_default","es_menu","selectedKeys","onClick","_ref","key","props","dispatch","openDrawer","Item","row","col","span","justify","align","collapsed","toogleSideBar","display","overlay","PureComponent","connect","sideBarState","Logo","SideBar_templateObject","menuLinks","1","2","SideBar","memo","onMenuSelect","item","keyPath","push","getSelectedKey","found","Object","keys","find","matchPath","location","pathname","path","exact","Responsive","Consumer","size","Sider","theme","trigger","collapsible","mode","onSelect","getLocation","GloableDrawer","lazy","Promise","all","e","then","bind","Entity","Attributes","Content","App_templateObject","App","onResize","responsive","breakpoints","small","value","baseSpacing","medium","large","breakpoint","getBreakpoint","window","innerWidth","setState","deviceResponsive","userAgent","deviceBreakpoints","phone","tablet","computer","test","getDeviceBreakpoint","addEventListener","removeEventListener","Provider","minHeight","components_SideBar","components_Header","react","fallback","Switch","Route","render","Redirect","to","hot","withRouter","entityReducers","_entityReducers","defineProperty","listEntities","TRIGGER","action","updateIn","SUCCESS","fromJS","payload","data","links","meta","FAILURE","FULFILL","saveEntity","expandTable","attributeReducers","_attributeReducers","getAttributes","set","params","entity","saveAttributes","attributes","addAttributes","updateAttribute","attribute","setReducers","_setReducers","listGroups","reorderSet","groups","updateSet","group","updateIndex","removeGroup","delete","removeIndex","groupReducers","_groupReducers","getGroup","saveGroup","listGroupsAttributes","loading","errors","saveGroupAttributes","cockpitReducers","_cockpitReducers","closeDrawer","updateListPageNo","number","dataChanged","changed","selectedEntity","handleActions","objectSpread","expandedRowKeys","sets","form","request","cockpit","sidebar","open","globalDrawer","current","list","hasChanges","entityViewer","reducers","history","combineReducers","router","connectRouter","fetchAllEntities","listEntitiesWatcher","entityWatcherSaga","response","regenerator_default","wrap","_context","prev","next","put","call","fetchEnities","query","sent","success","t0","failure","fulfill","finish","stop","_marked","_context2","takeLatest","_marked2","_context3","fork","_marked3","attributeWatcher","listSets","attributeWatcherSaga","delay","fetchAttributes","attribute_marked","attribute_marked2","attribute_marked3","listGroupWatcher","listGroupsW","listGroupAttrWatcher","listGroupAttr","groupWatcherSaga","fetchGroups","group_marked","takeEvery","group_marked2","_response","fetchGroupsAttributes","group_marked3","_context4","_marked4","_context5","_marked5","groupUpdateWatcher","groupUpdate","routerChangesWatcher","watchRouterChanges","locationChangesWatcher","watchLocationChanges","cockpitWatcherSaga","cockpit_marked","cockpit_marked2","search","parsed","routerIgnore","abrupt","select","parse","arrayFormat","toString","stringify","assign","expand","concat","page","cockpit_marked3","cockpit_marked4","_ref2","parseInt","cockpit_marked5","_context6","LOCATION_CHANGE","_marked6","_context7","_marked7","rootSaga","entitySaga","sagas_marked","sagaMiddleware","createSagaMiddleware","createHistory","basename","process","store","initialState","arguments","length","undefined","middlewares","routerMiddleware","enhancers","applyMiddleware","apply","composeEnhancers","compose","createStore","createRootReducer","run","configureStore","Boolean","hostname","match","ReactDOM","es","esm","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","redux_saga_routines__WEBPACK_IMPORTED_MODULE_0__","redux_actions__WEBPACK_IMPORTED_MODULE_1__","createAction","createRoutine","drawerState","drawerData","selectListPageNo","selectListSize","selectCurrentEntity","selectExpandedRow","config","base_url","urls","list_enitity","list_group","list_group_attributes","create_group","update_group","delete_group","list_attributes","create_attribute","fetch_attribute","update_attribute","delete_attribute","list_set","create_set","update_set","update_set_group","delete_set","backend_type","frontend_type","select_sources","template","values","len","left","escape","substring","right","s","map","char","join","forEach","String","replace","RegExp","regExp","url","urlWithQuery","uri","k","Array","isArray","val","encodeURIComponent","parseJSON","resolve","status","ok","json","options","csrfToken","querySelector","headers","X-CSRF-Token","content","reject","fetch","error","catch","message","Deserialise","classCallCheck","included","types","indexInclude","build","body","normalize","normalizeRelation","normalized","_this2","relationships","relationshipNames","realtion","_this3","collection","Serialise","_this4","exceptProps","toConsumableArray","attrName","indexOf","_this5","relationName","JsonApi","fetchSets","fetchAttribute","WebAPI_deleteAttribute","WebAPI_deleteSet","WebAPI_deleteGroup","presistSet","presistExistingSet","presistGroup","presistExistingGroup","presistAttribute","presistExistingAttribute","WebAPI_presistSetRegroup","fetchBackendTypes","fetchFrontendTypes","fetchSelectSources","dataFormatter","fetchData","deserialize","deleteAttribute","method","Content-Type","deleteSet","deleteGroup","presistData","post","JSON","presistSetRegroup","postData","serialize","fetchConfig","updateSequence","index","windowWidth","result","sort","b","first","second","some","name","ResponsiveContext","react__WEBPACK_IMPORTED_MODULE_0__","n","React","createContext"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAA,IAAAC,EAAAP,EAAA,IAEaG,EAAiB,SAAAK,GAAK,OAAIA,EAAMC,IAAIC,IAAI,WAExCN,EAAe,SAACI,EAAOG,GAAR,OAAeH,EAAMC,IAAIG,MAAM,CAAC,OAAQ,SAAUD,KAAQ,IAAIE,KAI7ER,EAAwB,SAACG,EAAOG,GAAR,OAAeH,EAAMC,IAAIG,MAAM,CAAC,SAAU,aAAcD,EAAI,UAAY,IAAIE,KAEpGP,EAAmB,SAACE,EAAOM,GAAR,OAAiBN,EAAMC,IAAIG,MAAM,CAAC,aAAc,OAAQE,KAAU,IAAID,gPCNtG,IAAME,QAAOC,EAAOC,IAAVC,KAeKC,IARS,WACpB,OACIC,EAAAC,EAAAC,cAACP,EAAD,KACIK,EAAAC,EAAAC,cAAAC,EAAA,GAAMC,KAAK,UAAUC,MAAO,CAAEC,SAAU,OAAQC,MAAO,iDCdnE,IAAAC,EAAA5B,EAAA,IAAAA,EAAAC,EAAAC,EAAA,sBAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,sBAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,sBAAA0B,EAAA,IAAA5B,EAAA,gvBCOA,IAAM6B,EAAWb,YAAOc,EAAA,EAAPd,CAAHE,KAQRa,EAAkBf,YAAOgB,EAAA,EAAPhB,CAAHiB,KAIfC,EAAgBlB,YAAOmB,EAAA,EAAOC,OAAdpB,CAAHqB,KAKbD,mLACO,IAAAE,EAAAC,KAECC,EACFC,EAAApB,EAAAC,cAAAoB,EAAA,GAAMC,aAAc,GAAIC,QAAS,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,IAAF,OAAWR,EAAKS,MAAMC,SAASC,YAAWH,MACvEL,EAAApB,EAAAC,cAAAoB,EAAA,EAAMQ,KAAN,CAAWJ,IAAI,gBACXL,EAAApB,EAAAC,cAAA,8BAEJmB,EAAApB,EAAAC,cAAAoB,EAAA,EAAMQ,KAAN,CAAWJ,IAAI,mBACXL,EAAApB,EAAAC,cAAA,kCAEJmB,EAAApB,EAAAC,cAAAoB,EAAA,EAAMQ,KAAN,CAAWJ,IAAI,qBACXL,EAAApB,EAAAC,cAAA,qCAKZ,OACImB,EAAApB,EAAAC,cAACY,EAAD,KACIO,EAAApB,EAAAC,cAAA6B,EAAA,OACIV,EAAApB,EAAAC,cAAA8B,EAAA,GAAKC,KAAM,IACPZ,EAAApB,EAAAC,cAAA6B,EAAA,GAAK3B,KAAK,OAAO8B,QAAQ,QAAQC,MAAM,UACnCd,EAAApB,EAAAC,cAACO,EAAD,CACIL,KAAMe,KAAKQ,MAAMS,UAAY,cAAgB,YAC7CZ,QAAS,kBAAMN,EAAKS,MAAMC,SAASS,oBAI/ChB,EAAApB,EAAAC,cAAA8B,EAAA,GAAKC,KAAM,GAAI5B,MAAO,CAAEiC,QAAS,SAC7BjB,EAAApB,EAAAC,cAAA6B,EAAA,GAAK3B,KAAK,OAAO8B,QAAQ,MAAMC,MAAM,UACjCd,EAAApB,EAAAC,cAACS,EAAD,CAAiB4B,QAASnB,GACtBC,EAAApB,EAAAC,cAACO,EAAD,CAAUL,KAAK,qBA/B1BoC,iBAgDNC,cANU,SAACrD,GACtB,MAAO,CACHgD,UAAWM,YAAatD,KAIjBqD,CAAyBzB,mOC9DxC,IAAM2B,EAAO/C,IAAOC,IAAV+C,KASJC,EAAY,CACdC,EAAG,UACHC,EAAG,eAGDC,EAAUC,eAAK,SAACtB,GAClB,IAAMuB,EAAe,SAAAzB,GAA4BA,EAAzB0B,KAAyB,IAAnBzB,EAAmBD,EAAnBC,IAAmBD,EAAd2B,QAC/BzB,EAAMC,SAASyB,YAAKR,EAAUnB,MAG5B4B,EAAiB,WAEnB,IAAMC,EAAQC,OAAOC,KAAKZ,GAAWa,KAAK,SAACP,GAMvC,QALeQ,YAAUhC,EAAMiC,SAASC,SAAU,CAC9CC,KAAMjB,EAAUM,GAChBY,OAAO,MAMf,OAAQR,GAAS,CAACA,IAAW,CAAC,MAElC,OACIlC,EAAApB,EAAAC,cAAC8D,EAAA,EAAkBC,SAAnB,KACK,SAACC,GAAD,OACG7C,EAAApB,EAAAC,cAAAa,EAAA,EAAQoD,MAAR,CACIC,MAAM,QACNC,QAAS,KACTC,aAAW,EACXlC,UAAqB,UAAT8B,GAA0BvC,EAAMS,WAE5Cf,EAAApB,EAAAC,cAACyC,EAAD,YACAtB,EAAApB,EAAAC,cAAAoB,EAAA,GAAM8C,MAAM,QAAQG,KAAK,SAAShD,aAAc+B,IAAkBkB,SAAUtB,GACxE7B,EAAApB,EAAAC,cAAAoB,EAAA,EAAMQ,KAAN,CAAWJ,IAAI,KACXL,EAAApB,EAAAC,cAAAQ,EAAA,GAAMN,KAAK,aACXiB,EAAApB,EAAAC,cAAA,yBAEJmB,EAAApB,EAAAC,cAAAoB,EAAA,EAAMQ,KAAN,CAAWJ,IAAI,KACXL,EAAApB,EAAAC,cAAAQ,EAAA,GAAMN,KAAK,YACXiB,EAAApB,EAAAC,cAAA,iCAgBbuC,cAPU,SAACrD,GACtB,MAAO,CACHgD,UAAWM,YAAatD,GACxBwE,SAAUa,YAAYrF,KAIfqD,CAAyBO,8KC7DxC,YAAM0B,GAAgBC,eAAK,kBAAMC,QAAAC,IAAA,CAAAjG,EAAAkG,EAAA,IAAAlG,EAAAkG,EAAA,MAAAC,KAAAnG,EAAAoG,KAAA,aAC3BC,GAASN,eAAK,kBAAMC,QAAAC,IAAA,CAAAjG,EAAAkG,EAAA,GAAAlG,EAAAkG,EAAA,GAAAlG,EAAAkG,EAAA,GAAAlG,EAAAkG,EAAA,GAAAlG,EAAAkG,EAAA,MAAAC,KAAAnG,EAAAoG,KAAA,aACpBE,GAAaP,eAAK,kBAAMC,QAAAC,IAAA,CAAAjG,EAAAkG,EAAA,GAAAlG,EAAAkG,EAAA,GAAAlG,EAAAkG,EAAA,GAAAlG,EAAAkG,EAAA,GAAAlG,EAAAkG,EAAA,KAAAC,KAAAnG,EAAAoG,KAAA,aAExBG,GAAUvF,YAAOmB,EAAA,EAAOoE,QAAdvF,CAAHwF,KAOPC,8MACJjG,MAAQ,KAWRkG,SAAW,WAAM,IAEPC,EAAerE,EAAK9B,MAApBmG,WAGFC,EAAc,CAClBC,MAAO,CACLC,MAAOC,KAETC,OAAQ,CACNF,MAAOC,MAETE,MAAO,IAGHC,EAAaC,YAAcC,OAAOC,WAAYT,GAEhDM,IAAeP,GACjBrE,EAAKgF,SAAS,CAAEX,WAAYO,OAIhCK,iBAAmB,WAAM,IACfC,EAAclF,EAAKS,MAAnByE,UAEFC,EAAoB,CACxBC,MAAO,QACPC,OAAQ,SACRC,SAAU,SAUZ,GAAIJ,EACF,MACE,qDAAqDK,KAAKL,GAEnDM,YAAoB,SAAUL,GAEnC,wBAAwBI,KAAKL,GACxBM,YAAoB,QAASL,GAE/BK,YAAoB,WAAYL,uFAvDzCL,OAAOW,iBAAiB,SAAUxF,KAAKmE,UACvCnE,KAAKmE,0DAILU,OAAOY,oBAAoB,SAAUzF,KAAKmE,2CAuDnC,IAKDC,EAHkCpE,KAAK/B,MAArCmG,YAKNpE,KAAKgF,oBACL,SAEF,OACE9E,EAAApB,EAAAC,cAAC8D,EAAA,EAAkB6C,SAAnB,CAA4BnB,MAAOH,GACjClE,EAAApB,EAAAC,cAAAa,EAAA,GAAQV,MAAO,CAAEyG,UAAW,UAC1BzF,EAAApB,EAAAC,cAAC6G,EAAD,MACA1F,EAAApB,EAAAC,cAAAa,EAAA,OACEM,EAAApB,EAAAC,cAAC8G,EAAD,MACA3F,EAAApB,EAAAC,cAACiF,GAAD,KACE9D,EAAApB,EAAAC,cAAC+G,EAAA,SAAD,CAAUC,SAAU7F,EAAApB,EAAAC,cAACH,EAAA,EAAD,OAClBsB,EAAApB,EAAAC,cAACiH,EAAA,EAAD,KACI9F,EAAApB,EAAAC,cAACkH,EAAA,EAAD,CAAOrD,OAAK,EAACD,KAAK,IAAIuD,OAAQ,kBAAOhG,EAAApB,EAAAC,cAACoH,EAAA,EAAD,CAAUC,GAAG,eAClDlG,EAAApB,EAAAC,cAACkH,EAAA,EAAD,CAAOrD,OAAK,EAACD,KAAK,UAAUuD,OAAQ,kBAAOhG,EAAApB,EAAAC,cAAC+E,GAAD,SAC3C5D,EAAApB,EAAAC,cAACkH,EAAA,EAAD,CAAOrD,OAAK,EAACD,KAAK,cAAcuD,OAAQ,kBAAOhG,EAAApB,EAAAC,cAACgF,GAAD,SAC/C7D,EAAApB,EAAAC,cAACkH,EAAA,EAAD,CAAOC,OAAQ,kBAAOhG,EAAApB,EAAAC,cAACoH,EAAA,EAAD,CAAUC,GAAG,WAGzClG,EAAApB,EAAAC,cAAC+G,EAAA,SAAD,CAAUC,SAAU7F,EAAApB,EAAAC,cAAA,qBAChBmB,EAAApB,EAAAC,cAACwE,GAAD,kBA1FAlC,iBAoGHgF,iBAAIC,YAAWpC,uEC/GjBqC,IAAcC,EAAA,GAAAnE,OAAAoE,GAAA,EAAApE,CAAAmE,EACxBE,IAAaC,QAAU,SAAC1I,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,WAAa,SAAAtC,GAAK,OAAI,MADnElC,OAAAoE,GAAA,EAAApE,CAAAmE,EAExBE,IAAaI,QAAU,SAAC7I,EAAO2I,GAC5B,OAAO3I,EAAM4I,SAAS,CAAE,SAAU,QAAU,SAAAtC,GAAK,OAAIwC,aAAOH,EAAOI,QAAQC,QACxEJ,SAAS,CAAE,SAAU,SAAW,SAAAtC,GAAK,OAAIqC,EAAOI,QAAQE,QACxDL,SAAS,CAAE,SAAU,QAAU,SAAAtC,GAAK,OAAIqC,EAAOI,QAAQG,SALrC9E,OAAAoE,GAAA,EAAApE,CAAAmE,EAOxBE,IAAaU,QAAU,SAACnJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,UAAY,SAAAtC,GAAK,OAAIqC,EAAOI,YAPzE3E,OAAAoE,GAAA,EAAApE,CAAAmE,EAQxBE,IAAaW,QAAU,SAACpJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,WAAa,SAAAtC,GAAK,OAAI,MARnElC,OAAAoE,GAAA,EAAApE,CAAAmE,EASxBc,IAAa,SAACrJ,EAAO2I,GAClB,OAAO3I,IAVcoE,OAAAoE,GAAA,EAAApE,CAAAmE,EAYxBe,IAAc,SAACtJ,EAAO2I,GACrB,MAA2B,WAAxBA,EAAOI,QAAQ/H,KAA0BhB,EACrCA,EAAM4I,SAAS,CAAE,SAAU,mBAAqB,SAAAtC,GAAK,OAAIwC,aAAOH,EAAOI,QAAQ1E,UAd/DkE,GCDdgB,IAAiBC,EAAA,GAAApF,OAAAoE,GAAA,EAAApE,CAAAoF,EAC3BC,IAAcf,QAAU,SAAC1I,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,aAAc,WAAa,SAAAtC,GAAK,OAAI,MADrElC,OAAAoE,GAAA,EAAApE,CAAAoF,EAE3BC,IAAcZ,QAAU,SAAC7I,EAAO2I,GAC/B,OAAO3I,EAAM4I,SAAS,CAAE,aAAc,QAAU,SAAAtC,GAAK,OAAIA,EAAMoD,IAAIf,EAAOI,QAAQY,OAAOC,OAAQd,aAAOH,EAAOI,QAAQC,SAC1GJ,SAAS,CAAE,aAAc,SAAW,SAAAtC,GAAK,OAAIqC,EAAOI,QAAQE,QAC5DL,SAAS,CAAE,aAAc,QAAU,SAAAtC,GAAK,OAAIqC,EAAOI,QAAQG,SAL9C9E,OAAAoE,GAAA,EAAApE,CAAAoF,EAO3BC,IAAcN,QAAU,SAACnJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,aAAc,UAAY,SAAAtC,GAAK,OAAIqC,EAAOI,YAP3E3E,OAAAoE,GAAA,EAAApE,CAAAoF,EAQ3BC,IAAcL,QAAU,SAACpJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,aAAc,WAAa,SAAAtC,GAAK,OAAI,MARrElC,OAAAoE,GAAA,EAAApE,CAAAoF,EAS3BK,IAAiB,SAAC7J,EAAO2I,GACxB,OAAO3I,EAAM4I,SAAS,CAAE,aAAc,OAAQD,EAAOI,QAAQa,QAAU,SAAAtD,GAAK,OAAIwC,aAAOH,EAAOI,QAAQe,gBAV5E1F,OAAAoE,GAAA,EAAApE,CAAAoF,EAY3BO,IAAgB,SAAC/J,EAAO2I,GAEvB,OAAG3I,EAAMI,MAAM,CAAE,aAAc,OAAQuI,EAAOI,QAAQa,SAC7C5J,EAAM4I,SAAS,CAAE,aAAc,OAAQD,EAAOI,QAAQa,QAAU,SAAAtD,GAAK,OAAIA,EAAMrC,KAAK6E,aAAOH,EAAOI,QAAQC,KAAKA,SAGjHhJ,EAAM4I,SAAS,CAAE,aAAc,QAAU,SAAAtC,GAAK,OAAIA,EAAMoD,IAAIf,EAAOI,QAAQa,OAAQd,aAAO,CAACH,EAAOI,QAAQC,KAAKA,UACzGJ,SAAS,CAAE,aAAc,SAAW,SAAAtC,GAAK,OAAIqC,EAAOI,QAAQC,KAAKC,UAnBpD7E,OAAAoE,GAAA,EAAApE,CAAAoF,EAsB3BQ,IAAkB,SAAChK,EAAO2I,GACzB,OAAO3I,EAAM4I,SAAS,CAAE,aAAc,OAAQD,EAAOI,QAAQa,QAAU,SAAAtD,GAAK,OAAIA,EAAMoD,IAAIf,EAAOI,QAAQkB,UAAWnB,aAAOH,EAAOI,QAAQC,KAAKA,WAvBrHQ,GCAjBU,IAAWC,EAAA,GAAA/F,OAAAoE,GAAA,EAAApE,CAAA+F,EAErBC,IAAW1B,QAAU,SAAC1I,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,OAAQ,WAAa,SAAAtC,GAAK,OAAI,MAFlElC,OAAAoE,GAAA,EAAApE,CAAA+F,EAGrBC,IAAWvB,QAAU,SAAC7I,EAAO2I,GAC1B,OAAO3I,EAAM4I,SAAS,CAAE,OAAQ,UAAY,SAAAtC,GAAK,OAAIA,EAAMoD,IAAIf,EAAOI,QAAQY,OAAOD,IAAKZ,aAAOH,EAAOI,QAAQC,SAC7GJ,SAAS,CAAE,OAAQ,SAAW,SAAAtC,GAAK,OAAIqC,EAAOI,QAAQE,QACtDL,SAAS,CAAE,OAAQ,QAAU,SAAAtC,GAAK,OAAIqC,EAAOI,QAAQG,SANtC9E,OAAAoE,GAAA,EAAApE,CAAA+F,EAQrBC,IAAWjB,QAAU,SAACnJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,OAAQ,UAAY,SAAAtC,GAAK,OAAIqC,EAAOI,YARxE3E,OAAAoE,GAAA,EAAApE,CAAA+F,EASrBC,IAAWhB,QAAU,SAACpJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,OAAQ,WAAa,SAAAtC,GAAK,OAAI,MATlElC,OAAAoE,GAAA,EAAApE,CAAA+F,EAWrBE,IAAa,SAACrK,EAAO2I,GACpB,OAAO3I,EAAM4I,SAAS,CAAE,OAAQ,SAAUD,EAAOI,QAAQW,KAAM,SAAApD,GAAK,OAAIwC,aAAOH,EAAOI,QAAQuB,YAZ1ElG,OAAAoE,GAAA,EAAApE,CAAA+F,EAerBI,IAAY,SAACvK,EAAO2I,GAEnB,OAAGA,EAAOI,QAAQY,OAAOa,MAChBxK,EAAM4I,SAAS,CAAE,OAAQ,SAAUD,EAAOI,QAAQY,OAAOD,IAAKf,EAAOI,QAAQY,OAAOc,aAAe,SAAAnE,GAAK,OAAIwC,aAAOH,EAAOI,QAAQC,QAGpIhJ,EAAM4I,SAAS,CAAE,OAAQ,SAAUD,EAAOI,QAAQY,OAAOD,KAAO,SAAApD,GAAK,OAAIA,EAAMrC,KAAK6E,aAAOH,EAAOI,QAAQC,WArB7F5E,OAAAoE,GAAA,EAAApE,CAAA+F,EAwBrBO,IAAc,SAAC1K,EAAO2I,GAErB,OAAO3I,EAAM4I,SAAS,CAAE,OAAQ,SAAUD,EAAOI,QAAQW,KAAO,SAAApD,GAAK,OAAIA,EAAMqE,OAAOhC,EAAOI,QAAQ6B,iBA1BjFT,GCcjB,OAAMU,IAAaC,EAAA,GAAA1G,OAAAoE,GAAA,EAAApE,CAAA0G,EACvBC,IAASrC,QAAU,SAAC1I,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,WAAa,SAAAtC,GAAK,OAAI,MADhElC,OAAAoE,GAAA,EAAApE,CAAA0G,EAEvBC,IAASlC,QAAU,SAAC7I,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,QAAU,SAAAtC,GAAK,OAAIA,EAAMoD,IAAIf,EAAOI,QAAQC,KAAK7I,GAAI2I,aAAOH,EAAOI,QAAQC,WAFrH5E,OAAAoE,GAAA,EAAApE,CAAA0G,EAGvBC,IAAS5B,QAAU,SAACnJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,UAAY,SAAAtC,GAAK,OAAIqC,EAAOI,YAHtE3E,OAAAoE,GAAA,EAAApE,CAAA0G,EAIvBC,IAAS3B,QAAU,SAACpJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,WAAa,SAAAtC,GAAK,OAAI,MAJhElC,OAAAoE,GAAA,EAAApE,CAAA0G,EAMvBE,IAAY,SAAChL,EAAO2I,GACnB,OAAO3I,EAAM4I,SAAS,CAAE,SAAU,OAAQD,EAAOI,QAAQ5I,IAAM,SAAAmG,GAAK,OAAIqC,EAAOI,QAAQyB,UAPjEpG,OAAAoE,GAAA,EAAApE,CAAA0G,EAUvBG,IAAqBvC,QAAU,SAAC1I,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,cAAgB,SAAAtC,GAAK,OAAIA,EAAMoD,IAAIf,EAAOI,QAAQY,OAAOa,MAAO1B,aAjBvI,CACLE,KAAM,GACNkC,SAAS,EACTC,OAAQ,YAIc/G,OAAAoE,GAAA,EAAApE,CAAA0G,EAWvBG,IAAqBpC,QAAU,SAAC7I,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,aAAcD,EAAOI,QAAQY,OAAOa,OAAS,SAAAlE,GAAK,OAAIA,EAAMoD,IAAI,OAAQZ,aAAOH,EAAOI,QAAQC,WAXpJ5E,OAAAoE,GAAA,EAAApE,CAAA0G,EAYvBG,IAAqB9B,QAAU,SAACnJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,aAAcD,EAAOI,QAAQY,OAAOa,OAAS,SAAAlE,GAAK,OAAIA,EAAMoD,IAAI,SAAUf,EAAOI,aAZvI3E,OAAAoE,GAAA,EAAApE,CAAA0G,EAavBG,IAAqB7B,QAAU,SAACpJ,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,aAAcD,EAAOI,QAAQY,OAAOa,OAAS,SAAAlE,GAAK,OAAIA,EAAMoD,IAAI,WAAW,OAbjItF,OAAAoE,GAAA,EAAApE,CAAA0G,EAevBM,IAAsB,SAACpL,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,SAAU,aAAcD,EAAOI,QAAQ5I,GAAI,QAAU,SAAAmG,GAAK,OAAIwC,aAAOH,EAAOI,QAAQe,gBAfvHgB,GCCbO,IAAeC,GAAA,GAAAlH,OAAAoE,GAAA,EAAApE,CAAAkH,GACvBrI,IAAgB,SAACjD,EAAO2I,GAAR,OAAmB3I,EAAM4I,SAAS,CAAE,UAAW,UAAW,QAAU,SAAAtC,GAAK,OAAKA,MADvElC,OAAAoE,GAAA,EAAApE,CAAAkH,GAEvB7I,IAAa,SAACzC,EAAO2I,GAClB,OAAO3I,EAAM4I,SAAS,CAAE,UAAW,eAAgB,QAAU,SAAAtC,GAAK,OAAI,IACjEsC,SAAS,CAAE,UAAW,eAAgB,WAAa,SAAAtC,GAAK,OAAIqC,EAAOI,YAJpD3E,OAAAoE,GAAA,EAAApE,CAAAkH,GAMvBC,IAAc,SAACvL,EAAO2I,GACnB,OAAO3I,EAAM4I,SAAS,CAAE,UAAW,eAAgB,QAAU,SAAAtC,GAAK,OAAI,IACrEsC,SAAS,CAAE,UAAW,eAAgB,WAAa,SAAAtC,GAAK,OAAI,SARzClC,OAAAoE,GAAA,EAAApE,CAAAkH,GAUvBE,IAAmB,SAACxL,EAAO2I,GACxB,OAAO3I,EAAM4I,SAAS,CAAE,UAAW,OAAQD,EAAOI,QAAQ/H,KAAM,WAAa,SAAAsF,GAAK,OAAIqC,EAAOI,QAAQ0C,WAXjFrH,OAAAoE,GAAA,EAAApE,CAAAkH,GAavBI,IAAc,SAAC1L,EAAO2I,GACnB,OAAO3I,EAAM4I,SAAS,CAAE,UAAW,aAAcD,EAAOI,QAAQ/H,MAAQ,SAAAsF,GAAK,OAAIqC,EAAOI,QAAQ4C,YAd5EvH,OAAAoE,GAAA,EAAApE,CAAAkH,GAgBvBM,IAAiB,SAAC5L,EAAO2I,GACtB,OAAO3I,EAAM4I,SAAS,CAAE,UAAW,OAAQ,aAAc,UAAY,SAAAtC,GAAK,OAAIqC,EAAOI,YAjBjEuC,IClBtBrL,GAAM4L,aAAczH,OAAA0H,GAAA,EAAA1H,CAAA,GACnBkE,GACAiB,GACAW,GACAW,GACAQ,IACJvC,aAAO1E,OAAA0H,GAAA,EAAA1H,CAAA,GLbwB,CAC9BwF,OAAQ,CACJZ,KAAM,GACNkC,SAAS,EACTC,OAAQ,KACRlC,MAAO,KACPC,KAAM,KACN6C,gBAAiB,KCPY,CACjCjC,WAAY,CACRd,KAAM,GACNC,MAAO,KACPC,KAAM,KACNgC,SAAS,EACTC,OAAQ,OCNe,CAC3Ba,KAAM,CACF1B,OAAQ,GACRY,SAAS,EACTC,OAAQ,KACRlC,MAAO,KACPC,KAAM,OCNmB,CAC7BoB,OAAQ,CACJ2B,KAAM,CACJf,SAAS,EACTC,OAAQ,KACRe,QAAS,MAEXlD,KAAM,GACNc,WAAY,GACZoB,SAAS,EACTC,OAAQ,KACRlC,MAAO,KACPC,KAAM,OCbqB,CAC/BiD,QAAS,CACLC,QAAS,CACLC,MAAM,GAEVC,aAAc,CACVD,MAAM,EACNE,QAAS,MAEbC,KAAM,CACF5C,OAAQ,CACJ2C,QAAS,EACTzH,KAAM,IAEVgF,WAAY,CACRyC,QAAS,EACTzH,KAAM,GACN8E,OAAQ,OAGhB6C,WAAY,CACRC,cAAe,QCCZC,GAAA,SAACC,GAAD,OAAaC,aAAgB,CACxCC,OAAQC,YAAcH,GACtB3M,2DCtBM+M,iBAgBAC,iBAIeC,IApBzB,SAAUF,GAAiBhE,GAA3B,IAAAmE,EAAA,OAAAC,GAAAvM,EAAAwM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGI,OAHJF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUC,aAAIhF,IAAayD,WAH3B,OAIqB,OAJrBoB,EAAAE,KAAA,EAI2BE,aAAKC,KAAc3E,EAAKD,QAAQ6E,OAAO,IAJlE,OAMI,OAFMT,EAJVG,EAAAO,KAAAP,EAAAE,KAAA,EAMUC,aAAIhF,IAAaqF,QAAQX,IANnC,OAAAG,EAAAE,KAAA,iBASI,OATJF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAAAA,EAAAE,KAAA,GASUC,aAAIhF,IAAauF,QAAbV,EAAAS,KATd,QAYI,OAZJT,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAYUC,aAAIhF,IAAawF,WAZ3B,eAAAX,EAAAY,OAAA,6BAAAZ,EAAAa,SAAAC,GAAA,qBAgBA,SAAUnB,KAAV,OAAAG,GAAAvM,EAAAwM,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACE,OADFa,EAAAb,KAAA,EACQc,aAAW7F,IAAaC,QAASsE,IADzC,wBAAAqB,EAAAF,SAAAI,IAIe,SAAUrB,KAAV,OAAAE,GAAAvM,EAAAwM,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACX,OADWgB,EAAAhB,KAAA,EACL/H,aAAI,CACRgJ,aAAKxB,MAFI,wBAAAuB,EAAAL,SAAAO,qBCnBLC,iBAmBAC,iBAIeC,IAvBzB,SAAUF,GAAiB3F,GAA3B,IAAAmE,EAAA,OAAAC,GAAAvM,EAAAwM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAE,KAAA,EAEQsB,aAAM,KAFd,OAMI,OANJxB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMUC,aAAIhE,IAAcyC,WAN5B,OAOqB,OAPrBoB,EAAAE,KAAA,EAO2BE,aAAKqB,KAAiB/F,EAAKD,QAAQY,QAAQ,GAAIX,EAAKD,QAAQ6E,OAAO,IAP9F,OASI,OAFMT,EAPVG,EAAAO,KAAAP,EAAAE,KAAA,GASUC,aAAIhE,IAAcqE,QAAQX,IATpC,QAAAG,EAAAE,KAAA,iBAYI,OAZJF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAAAA,EAAAE,KAAA,GAYUC,aAAIhE,IAAcuE,QAAdV,EAAAS,KAZd,QAeI,OAfJT,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAeUC,aAAIhE,IAAcwE,WAf5B,eAAAX,EAAAY,OAAA,6BAAAZ,EAAAa,SAAAa,GAAA,qBAmBA,SAAUJ,KAAV,OAAAxB,GAAAvM,EAAAwM,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACE,OADFa,EAAAb,KAAA,EACQc,aAAW7E,IAAcf,QAASiG,IAD1C,wBAAAN,EAAAF,SAAAc,IAIe,SAAUJ,KAAV,OAAAzB,GAAAvM,EAAAwM,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OACX,OADWgB,EAAAhB,KAAA,EACL/H,aAAI,CACRgJ,aAAKG,MAFI,wBAAAJ,EAAAL,SAAAe,qBCxBLC,iBAgBAC,iBAIAC,iBAgBAC,iBAIeC,IAxCzB,SAAUJ,GAAiBnG,GAA3B,IAAAmE,EAAA,OAAAC,GAAAvM,EAAAwM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGI,OAHJF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUC,aAAIrD,IAAW8B,WAHzB,OAIqB,OAJrBoB,EAAAE,KAAA,EAI2BE,aAAK8B,KAAaxG,EAAKD,QAAQY,QAAQ,GAAIX,EAAKD,QAAQ6E,OAAO,IAJ1F,OAMI,OAFMT,EAJVG,EAAAO,KAAAP,EAAAE,KAAA,EAMUC,aAAIrD,IAAW0D,QAAQX,IANjC,OAAAG,EAAAE,KAAA,iBASI,OATJF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAAAA,EAAAE,KAAA,GASUC,aAAIrD,IAAW4D,QAAXV,EAAAS,KATd,QAYI,OAZJT,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAYUC,aAAIrD,IAAW6D,WAZzB,eAAAX,EAAAY,OAAA,6BAAAZ,EAAAa,SAAAsB,GAAA,qBAgBA,SAAUL,KAAV,OAAAhC,GAAAvM,EAAAwM,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACE,OADFa,EAAAb,KAAA,EACQkC,aAAUtF,IAAW1B,QAASyG,IADtC,wBAAAd,EAAAF,SAAAwB,IAIA,SAAUN,GAAqBrG,GAA/B,IAAA4G,EAAA,OAAAxC,GAAAvM,EAAAwM,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,OAGI,OAHJgB,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,EAGUC,aAAIxC,IAAqBiB,WAHnC,OAIqB,OAJrBsC,EAAAhB,KAAA,EAI2BE,aAAKmC,KAAuB7G,EAAKD,QAAQY,QAAQ,GAAIX,EAAKD,QAAQ6E,OAAO,IAJpG,OAMI,OAFMT,EAJVqB,EAAAX,KAAAW,EAAAhB,KAAA,EAMUC,aAAIxC,IAAqB6C,QAAQX,IAN3C,OAAAqB,EAAAhB,KAAA,iBASI,OATJgB,EAAAjB,KAAA,GAAAiB,EAAAT,GAAAS,EAAA,SAAAA,EAAAhB,KAAA,GASUC,aAAIxC,IAAqB+C,QAArBQ,EAAAT,KATd,QAYI,OAZJS,EAAAjB,KAAA,GAAAiB,EAAAhB,KAAA,GAYUC,aAAIxC,IAAqBgD,QAAQ,CAAEtE,OAAQX,EAAKD,QAAQY,UAZlE,eAAA6E,EAAAN,OAAA,6BAAAM,EAAAL,SAAA2B,GAAA,qBAgBA,SAAUR,KAAV,OAAAlC,GAAAvM,EAAAwM,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OACE,OADFuC,EAAAvC,KAAA,EACQkC,aAAUzE,IAAqBvC,QAAS2G,IADhD,wBAAAU,EAAA5B,SAAA6B,IAIe,SAAUT,KAAV,OAAAnC,GAAAvM,EAAAwM,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,OACX,OADWyC,EAAAzC,KAAA,EACL/H,aAAI,CACRgJ,aAAKW,IACLX,aAAKa,MAHI,wBAAAW,EAAA9B,SAAA+B,8BCtCLC,iBAIAC,iBAIAC,iBAuBAC,iBAIAC,iBAgBAC,iBAIeC,IAvDzB,SAAUN,GAAmBnH,GAA7B,OAAAoE,GAAAvM,EAAAwM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OADJF,EAAAE,KAAA,EACUC,aAAI/B,YAAY,CAAE1K,KAAM,eAAgB2K,SAAS,KAD3D,wBAAA2B,EAAAa,SAAAuC,IAIA,SAAUN,KAAV,OAAAhD,GAAAvM,EAAAwM,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACE,OADFa,EAAAb,KAAA,EACQc,aAAW,CAACjE,IAAYe,KAAsB+E,IADtD,wBAAA9B,EAAAF,SAAAwC,IAIA,SAAUN,GAAqBrH,GAA/B,IAAA3G,EAAAoC,EAAAmM,EAAAC,EAAA,OAAAzD,GAAAvM,EAAAwM,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,WAEKxE,EAAKD,QAAQ+H,aAFlB,CAAAtC,EAAAhB,KAAA,eAAAgB,EAAAuC,OAAA,iBAI8B,OAJ9BvC,EAAAhB,KAAA,EAIoCwD,aAAO3L,KAJ3C,OAMiB,OANjBhD,EAAAmM,EAAAX,KAIQpJ,EAJRpC,EAIQoC,SAAUmM,EAJlBvO,EAIkBuO,OAJlBpC,EAAAhB,KAAA,EAMuBE,aAAKuD,SAAOL,EAAQ,CAACM,YAAa,YANzD,UAMQL,EANRrC,EAAAX,KAQK7E,EAAKhI,OAASsI,IAAY6H,WAR/B,CAAA3C,EAAAhB,KAAA,SAUa,OAVbgB,EAAAhB,KAAA,GAUmBE,aAAK0D,aAAWhN,OAAOiN,OAAOR,EAAQ,CAAES,OAAQtI,EAAKD,QAAQ1E,OAAS,CAAE6M,YAAa,YAVxG,QAYI,OAFAN,EAVJpC,EAAAX,KAAAW,EAAAhB,KAAA,GAYUC,aAAIxJ,YAAI,GAAAsN,OAAI9M,EAAJ,KAAA8M,OAAgBX,KAZlC,WAeK5H,EAAKhI,OAASwK,IAAiB2F,WAfpC,CAAA3C,EAAAhB,KAAA,SAiBa,OAjBbgB,EAAAhB,KAAA,GAiBmBE,aAAK0D,aAAWhN,OAAOiN,OAAOR,EAAQ,CAAEW,KAAMxI,EAAKD,QAAQ0C,SAAW,CAAEyF,YAAa,YAjBxG,QAmBI,OAFAN,EAjBJpC,EAAAX,KAAAW,EAAAhB,KAAA,GAmBUC,aAAIxJ,YAAI,GAAAsN,OAAI9M,EAAJ,KAAA8M,OAAgBX,KAnBlC,yBAAApC,EAAAL,SAAAsD,IAuBA,SAAUnB,KAAV,OAAAlD,GAAAvM,EAAAwM,KAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,OACE,OADFuC,EAAAvC,KAAA,EACQc,aAAW,CAAChF,IAAakC,KAAmB6E,IADpD,wBAAAN,EAAA5B,SAAAuD,IAIA,SAAUnB,GAAuBvH,GAAjC,IAAA2I,EAAAlN,EAAAmM,EAAAC,EAAA,OAAAzD,GAAAvM,EAAAwM,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,OAE8B,OAF9ByC,EAAAzC,KAAA,EAEoCwD,aAAO3L,KAF3C,OAGiB,OAHjBsM,EAAA1B,EAAApC,KAEQpJ,EAFRkN,EAEQlN,SAAUmM,EAFlBe,EAEkBf,OAFlBX,EAAAzC,KAAA,EAGuBE,aAAKuD,SAAOL,EAAQ,CAACM,YAAa,YAHzD,UAGQL,EAHRZ,EAAApC,KAKkB,YAAbpJ,EALL,CAAAwL,EAAAzC,KAAA,SAMI,OANJyC,EAAAzC,KAAA,GAMUC,aAAInE,YAAY,CAAEtI,KAAM,SAAUqD,KAAMwM,EAAOS,QAAU,GAAIR,cAAc,KANrF,QAOI,OAPJb,EAAAzC,KAAA,GAOUC,aAAIjC,YAAiB,CAAExK,KAAM,SAAUyK,OAAQmG,SAASf,EAAOW,OAAS,EAAGV,cAAc,KAPnG,WAUkB,gBAAbrM,EAVL,CAAAwL,EAAAzC,KAAA,SAWI,OAXJyC,EAAAzC,KAAA,GAWUC,aAAI7B,YAAeiF,EAAOjH,SAXpC,QAYI,OAZJqG,EAAAzC,KAAA,GAYUC,aAAIjC,YAAiB,CAAExK,KAAM,aAAcyK,OAAQmG,SAASf,EAAOW,OAAS,EAAGV,cAAc,KAZvG,yBAAAb,EAAA9B,SAAA0D,IAgBA,SAAUrB,KAAV,OAAApD,GAAAvM,EAAAwM,KAAA,SAAAyE,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,OACE,OADFsE,EAAAtE,KAAA,EACQc,aAAWyD,IAAiBxB,IADpC,wBAAAuB,EAAA3D,SAAA6D,IAIe,SAAUvB,KAAV,OAAArD,GAAAvM,EAAAwM,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,OACX,OADWyE,EAAAzE,KAAA,EACL/H,aAAI,CACRgJ,aAAK2B,IACL3B,aAAK+B,IACL/B,aAAK6B,MAJI,wBAAA2B,EAAA9D,SAAA+D,qBCtDUC,IAAV,SAAUA,KAAV,OAAA/E,GAAAvM,EAAAwM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACX,OADWF,EAAAE,KAAA,EACL/H,aAAI,CACNgJ,aAAK2D,IACL3D,aAAKI,IACLJ,aAAKc,IACLd,aAAKgC,MALE,wBAAAnD,EAAAa,SAAAkE,ICDf,IAAMC,GAAiBC,eCEvB,IACM3F,GAAU4F,YAAc,CAC1BC,SAAQ,GAAAlB,OAAKmB,oBAEXC,GDJS,WAAoD,IAA5BC,EAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAb,GAAIjG,EAASiG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzDC,EAAc,CAACV,GAAgBW,aAAiBrG,IAEhDsG,EAAY,CAACC,KAAeC,WAAf,EAAmBJ,IAIhCK,EAKIC,KAGJX,EAAQY,aACVC,GAAkB5G,GAClBgG,EACAS,EAAgBD,WAAhB,EAAoBF,IAMxB,OAFAZ,GAAemB,IAAItB,IAEZQ,ECpBGe,CAJO,GAIsB9G,ICAvB+G,QACW,cAA7B/M,OAAOpC,SAASoP,UAEe,UAA7BhN,OAAOpC,SAASoP,UAEhBhN,OAAOpC,SAASoP,SAASC,MACvB,2DCbNC,IAAS7L,OAAOhG,EAAApB,EAAAC,cFSD,WACX,OACImB,EAAApB,EAAAC,cAACiT,EAAA,EAAD,CAAUpB,MAAOA,IACb1Q,EAAApB,EAAAC,cAACkT,EAAA,EAAD,CAAiBpH,QAASA,IACtB3K,EAAApB,EAAAC,cAACmT,GAAD,SEbA,MAAUC,SAASC,eAAe,SD4H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3O,KAAK,SAAA4O,GACjCA,EAAaC,+CEnInBhV,EAAAC,EAAAC,EAAA,sBAAAuD,IAAAzD,EAAAC,EAAAC,EAAA,sBAAAgM,IAAAlM,EAAAC,EAAAC,EAAA,sBAAA+C,IAAAjD,EAAAC,EAAAC,EAAA,sBAAA6L,IAAA/L,EAAAC,EAAAC,EAAA,sBAAA4J,IAAA9J,EAAAC,EAAAC,EAAA,sBAAA8L,IAAAhM,EAAAC,EAAAC,EAAA,sBAAAkM,IAAApM,EAAAC,EAAAC,EAAA,sBAAA+I,IAAAjJ,EAAAC,EAAAC,EAAA,sBAAA2J,IAAA7J,EAAAC,EAAAC,EAAA,sBAAA+J,IAAAjK,EAAAC,EAAAC,EAAA,sBAAAmK,IAAArK,EAAAC,EAAAC,EAAA,sBAAAqK,IAAAvK,EAAAC,EAAAC,EAAA,sBAAAsK,IAAAxK,EAAAC,EAAAC,EAAA,sBAAA6K,IAAA/K,EAAAC,EAAAC,EAAA,sBAAA2K,IAAA7K,EAAAC,EAAAC,EAAA,sBAAAqL,IAAAvL,EAAAC,EAAAC,EAAA,sBAAAgL,IAAAlL,EAAAC,EAAAC,EAAA,sBAAA0K,IAAA5K,EAAAC,EAAAC,EAAA,sBAAAuL,IAAAzL,EAAAC,EAAAC,EAAA,sBAAA0L,IAAA5L,EAAAC,EAAAC,EAAA,sBAAAsL,IAAA,IAAAyJ,EAAAjV,EAAA,IAAAkV,EAAAlV,EAAA,IAGayD,EAAgB0R,YAAa,eAE7BjJ,EAAciJ,YAAa,gBAE3BlS,EAAakS,YAAa,eAE1BpJ,EAAcoJ,YAAa,gBAE3BrL,EAAcqL,YAAa,gBAE3BnJ,EAAmBmJ,YAAa,mBAEhC/I,EAAiB+I,YAAa,oBAE9BlM,EAAemM,YAAc,iBAI7BvL,GAFYuL,YAAc,cAEbD,YAAa,gBAI1BlL,GAFgBmL,YAAc,oBAEdA,YAAc,mBAE9B/K,EAAiB8K,YAAa,mBAE9B5K,EAAgB4K,YAAa,kBAE7B3K,EAAkB2K,YAAa,oBAM/BpK,GAJSqK,YAAc,WAEbD,YAAa,YAEXA,YAAa,eAEzBtK,EAAasK,YAAa,eAE1B5J,EAAW6J,YAAc,aAEzBlK,EAAciK,YAAa,gBAE3BvK,EAAawK,YAAc,cAE3B3J,EAAuB2J,YAAc,yBAErCxJ,EAAsBuJ,YAAa,yBAEnC3J,EAAY2J,YAAa,+CCnDtCnV,EAAAC,EAAAC,EAAA,sBAAA4D,IAAA9D,EAAAC,EAAAC,EAAA,sBAAAmV,IAAArV,EAAAC,EAAAC,EAAA,sBAAAoV,IAAAtV,EAAAC,EAAAC,EAAA,sBAAAqV,IAAAvV,EAAAC,EAAAC,EAAA,sBAAAsV,IAAAxV,EAAAC,EAAAC,EAAA,sBAAAuV,IAAAzV,EAAAC,EAAAC,EAAA,sBAAAwV,IAAA1V,EAAAC,EAAAC,EAAA,sBAAA+M,IAAAjN,EAAAC,EAAAC,EAAA,sBAAA2F,IAAA7F,EAAA,SAGa8D,EAAe,SAAAtD,GAAK,OAAIA,EAAMC,IAAIG,MAAM,CAAC,UAAW,UAAW,UAE/DyU,EAAc,SAAA7U,GAAK,OAAIA,EAAMC,IAAIG,MAAM,CAAC,UAAW,eAAgB,UAEnE0U,EAAa,SAAA9U,GAAK,OAAIA,EAAMC,IAAIG,MAAM,CAAC,UAAW,eAAgB,aAElE2U,EAAmB,SAAC/T,EAAMhB,GAAP,OAAiBA,EAAMC,IAAIG,MAAM,CAAE,UAAW,OAAQY,EAAM,aAE/EgU,EAAiB,SAAChU,EAAMhB,GAAP,OAAiBA,EAAMC,IAAIG,MAAM,CAAE,UAAW,OAAQY,EAAM,UAE7EiU,EAAsB,SAAAjV,GAAK,OAAIA,EAAMC,IAAIG,MAAM,CAAE,UAAW,OAAQ,aAAc,YAElF8U,EAAoB,SAAClU,EAAMhB,GAAP,OAAiBA,EAAMC,IAAIG,MAAM,CAAEY,EAAM,qBAE7DyL,EAAa,SAACzM,EAAOgB,GAAR,OAAiBhB,EAAMC,IAAIG,MAAM,CAAE,UAAW,aAAcY,KAEzEqE,EAAc,SAACrF,GAAD,OAAWA,EAAM8M,OAAOtI,2CCnBpC,IAAA2Q,EAAA,CACXC,SAAA,GAAA7D,OAAemB,IAAf,YACA2C,KAAM,CACFC,aAAgB,WAChBC,WAAc,oCACdC,sBAAyB,uDACzBC,aAAgB,oCAChBC,aAAgB,4CAChBC,aAAgB,4CAChBC,gBAAmB,+BACnBC,iBAAoB,+BACpBC,gBAAmB,sCACnBC,iBAAoB,sCACpBC,iBAAoB,sCACpBC,SAAY,wBACZC,WAAc,wBACdC,WAAc,8BACdC,iBAAoB,sCACpBC,WAAc,8BACdC,aAAgB,gBAChBC,cAAiB,iBACjBC,eAAkB,mBCnBblF,EAAS,SAACmF,EAAUC,GAC7B,IACIC,EADM,KACI7D,OAGV8D,EAAOC,EAJD,KAIYC,UAAU,EAAGH,EAAM,IADxB,OAEbI,EAFa,OAEQF,EALf,KAK0BC,UAAUH,EAAM,EAAGA,IAEvD,SAASE,EAAQG,GACb,MAAO,GAAGC,IAAIvJ,KAAKsJ,EAAG,SAAUE,GAC5B,MAAO,KAAOA,IACfC,KAAK,IAYZ,OALA/S,OAAOC,KAAKqS,GAAQU,QAAQ,SAAU9U,GAClC,IAAIgE,EAAQ+Q,OAAOX,EAAOpU,IAAMgV,QAAQ,MAAO,QAC/Cb,EAAWA,EAASa,QANxB,SAAiBhV,GACb,OAAO,IAAIiV,OAAOX,EAAOtU,EAAMyU,EAAO,KAKVS,CAAOlV,GAAMgE,KAGtCmQ,GAGEgB,EAAM,SAACnV,GAAqB,IAAhBqH,EAAgBkJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC9B,OAAGsC,EAAOE,MAAQF,EAAOE,KAAK/S,GAC1B,GAAAiP,OAAU4D,EAAOC,UAAjB7D,OAA4BD,EAAO6D,EAAOE,KAAK/S,GAAMqH,IAEzD,GAAA4H,OAAU4D,EAAOC,SAAjB,KAAA7D,OAA6BD,EAAOhP,EAAKqH,KAGhC+N,EAAe,SAACD,EAAK9N,GAC9B,GAAkC,IAA/BvF,OAAOC,KAAKsF,GAAQmJ,OAAc,OAAO2E,EAC5C,IAAME,EAAMvT,OACXC,KAAKsF,GACLsN,IAAI,SAAAW,GACD,OAAGC,MAAMC,QAAQnO,EAAOiO,IACbjO,EAAOiO,GACbX,IAAI,SAAAc,GAAG,SAAAxG,OAAOyG,mBAAmBJ,GAA1B,OAAArG,OAAkCyG,mBAAmBD,MAC5DZ,KAAK,KAEV,GAAA5F,OAAUyG,mBAAmBJ,GAA7B,KAAArG,OAAmCyG,mBAAmBrO,EAAOiO,OAEhET,KAAK,KAEN,SAAA5F,OAAUkG,EAAV,KAAAlG,OAAiBoG,IAUrB,SAASM,EAAU9K,GACf,OAAO,IAAI3H,QAAQ,SAAC0S,GAChB,OAAwB,MAApB/K,EAASgL,OACFD,EAAQ,CACXC,OAAQhL,EAASgL,OACjBC,GAAIjL,EAASiL,KAIdjL,EAASkL,OACX1S,KAAK,SAAC0S,GAAD,OAAUH,EAAQ,CACpBC,OAAQhL,EAASgL,OACjBC,GAAIjL,EAASiL,GACbC,aAaT,IAAMnM,EAAU,SAACuL,GAAsB,IAAjBa,EAAiBzF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC7B0F,EAAYrE,SAASsE,cAAc,uBAEzC,OADAF,EAAQG,QAAUrU,OAAOiN,OAAOiH,EAAQG,SAAW,GAAIF,EAAY,CAAEG,eAAgBH,EAAUI,SAAY,IACpG,IAAInT,QAAQ,SAAC0S,EAASU,GAC3BC,MAAMpB,EAAKa,GACR3S,KAAKsS,GACLtS,KAAK,SAACwH,GACL,OAAIA,EAASiL,GACJF,EAAQ/K,EAASkL,MAGnBO,EAAO,CAAG5X,KAAM,SAAUmX,OAAOhL,EAASgL,OAAQW,MAAO3L,EAASkL,KAAKS,OAAS3L,EAASkL,SAEjGU,MAAM,SAACD,GAAD,OAAWF,EAAO,CACrB5X,KAAM,UACNgY,QAASF,EAAME,+CCnGrBC,aAMF,SAAAA,EAAYZ,GAAOjU,OAAA8U,EAAA,EAAA9U,CAAArC,KAAAkX,GAAAlX,KAJnBoX,SAAW,GAIOpX,KAHlBqX,MAAQ,GAGU,IACRpQ,EAAmBqP,EAAnBrP,KAAMmQ,EAAad,EAAbc,SAEZpX,KAAKoX,SAAWpX,KAAKsX,aAAaF,GAClCpX,KAAKiH,KAAOA,oDAIZ,OAAOjH,KAAKuX,MAAMvX,KAAKiH,oCAGrBA,GAAM,IAAAlH,EAAAC,KAEJwX,EAAO,KAcX,OAZG1B,MAAMC,QAAQ9O,IAEbuQ,EAAO,GAEPvQ,EAAKoO,QAAQ,SAACrT,GACVwV,EAAKtV,KAAKG,OAAOiN,OAAOvP,EAAK0X,UAAUzV,GAAOjC,EAAK2X,kBAAkB1V,QAIzEwV,EAAOnV,OAAOiN,OAAOtP,KAAKyX,UAAUxQ,GAAOjH,KAAK0X,kBAAkBzQ,IAG/DuQ,oCAGDvQ,GAEN,IAAIc,EAAad,EAAKc,WAClBA,IACAA,EAAa/H,KAAKoX,SAAL,GAAA5H,OAAiBvI,EAAKhI,KAAtB,KAAAuQ,OAA8BvI,EAAK7I,MAGpD,IAAMuZ,EAAatV,OAAOiN,OAAO,CAAErQ,KAAMgI,EAAKhI,KAAMb,GAAI6I,EAAK7I,IAAM2J,GAInE,OAFA/H,KAAKqX,MAAMpQ,EAAKhI,MAAQoD,OAAOiN,OAAO,GAAItP,KAAKqX,MAAMpQ,EAAKhI,MAAlCoD,OAAAoE,EAAA,EAAApE,CAAA,GAA4C4E,EAAK7I,GAAMuZ,IAExEA,4CAGO1Q,GAAM,IAAA2Q,EAAA5X,KACpB,IAAIiH,EAAK4Q,cACL,OAAO,KAGX,IAAIA,EAAgB5Q,EAAK4Q,cACrBL,EAAO,CACPM,kBAAmB,IAQvB,OALAzV,OAAOC,KAAKuV,GAAexC,QAAQ,SAAC0C,GAChCP,EAAKO,GAAYH,EAAKL,MAAMM,EAAcE,GAAU9Q,MACpDuQ,EAAI,kBAAsBtV,KAAK6V,KAG5BP,uCAGEvQ,GAAM,IAAA+Q,EAAAhY,KACf,IAAIiH,EACA,MAAO,GAGX,IAAIgR,EAAa,GAMjB,OAJAhR,EAAKoO,QAAQ,SAACrT,GACViW,EAAU,GAAAzI,OAAIxN,EAAK/C,KAAT,KAAAuQ,OAAiBxN,EAAK5D,KAAQ4Z,EAAKP,UAAUzV,KAGpDiW,WAKTC,aAIF,SAAAA,EAAYJ,GAAoBzV,OAAA8U,EAAA,EAAA9U,CAAArC,KAAAkY,GAC5BlY,KAAK8X,kBAAoBA,kDAGzB7Q,GACA,OAAOjH,KAAKuX,MAAMtQ,iCAGhBA,GAAM,IAAAkR,EAAAnY,KACJwX,EAAO,KAcX,OAZG1B,MAAMC,QAAQ9O,IAEbuQ,EAAO,GAEPvQ,EAAKoO,QAAQ,SAACrT,GACVwV,EAAKtV,KAAKG,OAAOiN,OAAO6I,EAAKV,UAAUzV,GAAOmW,EAAKT,kBAAkB1V,QAIzEwV,EAAOnV,OAAOiN,OAAOtP,KAAKyX,UAAUxQ,GAAOjH,KAAK0X,kBAAkBzQ,IAG/DuQ,oCAGDvQ,GAEN,IAAImR,EAAW,CAAI,KAAM,OAAQ,qBAAlB5I,OAAAnN,OAAAgW,EAAA,EAAAhW,CAA0CrC,KAAK8X,oBAE1D/P,EAAa,GAOjB,OANA1F,OAAOC,KAAK2E,GAAMoO,QAAQ,SAACiD,IACgB,IAAnCF,EAAYG,QAAQD,KACpBvQ,EAAWuQ,GAAYrR,EAAKqR,MAIjCjW,OAAOC,KAAKyF,GAAYgJ,OAChB,CAAE9R,KAAMgI,EAAKhI,KAAMb,GAAI6I,EAAK7I,GAAK2J,cAGrC,CAAE9I,KAAMgI,EAAKhI,KAAMb,GAAI6I,EAAK7I,8CAGrB6I,GAAM,IAAAuR,EAAAxY,KAEd6X,EAAgB,GAOtB,OANA7X,KAAK8X,kBAAkBzC,QAAQ,SAACoD,QACDzH,IAAvB/J,EAAKwR,KACLZ,EAAcY,GAAgB,CAAExR,KAAMuR,EAAKjB,MAAMtQ,EAAKwR,QAI3DpW,OAAOC,KAAKuV,GAAe9G,OACnB,CAAE8G,iBAGN,cAIMa,sGAELpC,GAER,OADqB,IAAIY,EAAYZ,GACjB5E,wCAGdzK,EAAM6Q,GAEZ,OADmB,IAAII,EAAUJ,GACfpG,IAAIzK,YC/J9BxJ,EAAAC,EAAAC,EAAA,sBAAAiO,IAAAnO,EAAAC,EAAAC,EAAA,sBAAAgb,IAAAlb,EAAAC,EAAAC,EAAA,sBAAA8P,IAAAhQ,EAAAC,EAAAC,EAAA,sBAAAmQ,IAAArQ,EAAAC,EAAAC,EAAA,sBAAAqP,IAAAvP,EAAAC,EAAAC,EAAA,sBAAAib,IAAAnb,EAAAC,EAAAC,EAAA,sBAAAkb,IAAApb,EAAAC,EAAAC,EAAA,sBAAAmb,IAAArb,EAAAC,EAAAC,EAAA,sBAAAob,IAAAtb,EAAAC,EAAAC,EAAA,sBAAAqb,IAAAvb,EAAAC,EAAAC,EAAA,sBAAAsb,IAAAxb,EAAAC,EAAAC,EAAA,sBAAAub,IAAAzb,EAAAC,EAAAC,EAAA,sBAAAwb,IAAA1b,EAAAC,EAAAC,EAAA,sBAAAyb,IAAA3b,EAAAC,EAAAC,EAAA,sBAAA0b,IAAA5b,EAAAC,EAAAC,EAAA,sBAAA2b,IAAA7b,EAAAC,EAAAC,EAAA,sBAAA4b,IAAA9b,EAAAC,EAAAC,EAAA,sBAAA6b,IAAA/b,EAAAC,EAAAC,EAAA,sBAAA8b,IAGA,IAAMC,EAAgB,IAAIhB,EAEpBiB,EAAY,SAAC1a,EAAM2I,EAAQiE,GAC7B,OAAO1B,EAAQwL,EAAaD,EAAIzW,EAAM2I,GAASiE,IACtCjI,KAAK,SAAA0S,GACF,IAAMrP,EAAOyS,EAAcE,YAAYtD,GACvC,OAAO7S,QAAQ0S,QAAQ,CACnBlP,OACAW,SACAV,MAAOoP,EAAKpP,MACZC,KAAMmP,EAAKnP,UAKlByE,EAAe,SAAAC,GACxB,OAAO8N,EAAU,eAAgB,GAAI9N,IAG5B8M,EAAY,SAAC/Q,EAAQiE,GAC9B,OAAO8N,EAAU,WAAY/R,EAAQiE,IAG5B4B,EAAc,SAAC7F,EAAQiE,GAChC,OAAO8N,EAAU,aAAc/R,EAAQiE,IAG9BiC,EAAwB,SAAClG,EAAQiE,GAC1C,OAAO8N,EAAU,wBAAyB/R,EAAQiE,IAGzCmB,EAAkB,SAACpF,EAAQiE,GACpC,OAAO8N,EAAU,kBAAmB/R,EAAQiE,IAGnC+M,EAAiB,SAAChR,GAC3B,OAAO+R,EAAU,kBAAmB/R,EAAQ,KAGnCiS,EAAkB,SAACjS,GAC5B,OAAOuC,EAAQwL,EAAaD,EAAI,mBAAoB9N,GAAS,IAAK,CACtDkS,OAAQ,SACRpD,QAAS,CACLqD,eAAgB,sBAGvBnW,KAAK,SAAA0S,GACF,OAAO7S,QAAQ0S,QAAQ,OAI1B6D,EAAY,SAACpS,GACtB,OAAOuC,EAAQwL,EAAaD,EAAI,aAAc9N,GAAS,IAAK,CAChDkS,OAAQ,SACRpD,QAAS,CACLqD,eAAgB,sBAGvBnW,KAAK,SAAA0S,GACF,OAAO7S,QAAQ0S,QAAQ,OAI1B8D,EAAc,SAACrS,GACxB,OAAOuC,EAAQwL,EAAaD,EAAI,eAAgB9N,GAAS,IAAK,CAClDkS,OAAQ,SACRpD,QAAS,CACLqD,eAAgB,sBAGvBnW,KAAK,SAAA0S,GACF,OAAO7S,QAAQ0S,QAAQ,OAIjC+D,EAAc,SAACjb,EAAM2I,EAAQuS,EAAMtO,GAAyB,IAAlBiO,EAAkBhJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAX,OACnD,OAAO3G,EAAQwL,EAAaD,EAAIzW,EAAM2I,GAASiE,GAAQ,CAC3CiO,SACApD,QAAS,CACLqD,eAAgB,oBAEpBvC,KAAM4C,KAAK/K,UAAU8K,KAExBvW,KAAK,SAAA0S,GACF,IAAMrP,EAAOyS,EAAcE,YAAYtD,GACvC,OAAO7S,QAAQ0S,QAAQ,CACnBlP,OACAW,SACAV,MAAOoP,EAAKpP,MACZC,KAAMmP,EAAKnP,UAMlB6R,EAAa,SAACpR,EAAQuS,EAAMtO,GACrC,OAAOqO,EAAY,aAActS,EAAQuS,EAAMtO,IAGtCoN,EAAqB,SAACrR,EAAQuS,EAAMtO,GAC7C,OAAOqO,EAAY,aAActS,EAAQuS,EAAMtO,EAAO,QAG7CqN,EAAe,SAACtR,EAAQuS,EAAMtO,GACvC,OAAOqO,EAAY,eAAgBtS,EAAQuS,EAAMtO,IAGxCsN,EAAuB,SAACvR,EAAQuS,EAAMtO,GAC/C,OAAOqO,EAAY,eAAgBtS,EAAQuS,EAAMtO,EAAO,QAG/CuN,EAAmB,SAACxR,EAAQuS,EAAMtO,GAC3C,OAAOqO,EAAY,mBAAoBtS,EAAQuS,EAAMtO,IAG5CwN,EAA2B,SAACzR,EAAQuS,EAAMtO,GACnD,OAAOqO,EAAY,mBAAoBtS,EAAQuS,EAAMtO,EAAO,QAGnDwO,EAAoB,SAACzS,EAAQuS,EAAMtO,GAC5C,IAAMyO,EAAW,CAAErT,KAAMyS,EAAca,UAAUJ,EAAM,CAAC,gBACxD,OAAOhQ,EAAQwL,EAAaD,EAAI,mBAAoB9N,GAASiE,GAAQ,CACzDiO,OAAQ,MACRpD,QAAS,CACLqD,eAAgB,oBAEpBvC,KAAM4C,KAAK/K,UAAUiL,KAExB1W,KAAK,SAAA0S,GACF,OAAO7S,QAAQ0S,QAAQ,OAIjCqE,EAAc,SAACvb,GACjB,OAAOkL,EAAQuL,EAAIzW,IACV2E,KAAK,SAAA0S,GACF,OAAO7S,QAAQ0S,QAAQ,CACnBlP,KAAKqP,OAKZiD,EAAoB,WAC7B,OAAOiB,EAAY,iBAGVhB,EAAqB,WAC9B,OAAOgB,EAAY,kBAGVf,EAAqB,WAC9B,OAAOe,EAAY,oDCzJvB/c,EAAAC,EAAAC,EAAA,sBAAA8c,IAAAhd,EAAAC,EAAAC,EAAA,sBAAAiH,IAAAnH,EAAAC,EAAAC,EAAA,sBAAA4H,IAAO,IAAMkV,EAAiB,SAACxC,GAC3B,OAAOA,EAAW/C,IAAI,SAAClT,EAAM0Y,GACzB,OAAO1Y,EAAK2F,IAAI,WAAY+S,MAIvB9V,EAAgB,SAAC+V,EAAatW,GACvC,IAAIuW,EAqBJ,OApBAvY,OAAOC,KAAK+B,GACTwW,KAAK,SAAC/b,EAAGgc,GACR,IAAMC,EAAQ1W,EAAYvF,GACpBkc,EAAS3W,EAAYyW,GAC3B,OAAKC,EACAC,EACAD,EAAMxW,MACNyW,EAAOzW,MACLwW,EAAMxW,MAAQyW,EAAOzW,OADD,EADF,GADJ,EADF,IAMpB0W,KAAK,SAAAC,GACJ,IAAMvW,EAAaN,EAAY6W,GAC/B,SAAIvW,GACGA,EAAWJ,SAASI,EAAWJ,OAASoW,MAC3CC,EAASM,GACF,KAKRN,GAGIrV,EAAsB,SAACtG,EAAMiG,GAAP,OAA6BA,EAAkBjG,qCChCpFxB,EAAAC,EAAAC,EAAA,sBAAAwd,IAAA,IAAAC,EAAA3d,EAAA,GAEa0d,EAFb1d,EAAA4d,EAAAD,GAEiCE,EAAMC,mBAAcvK","file":"static/js/main.77cbb1a6.chunk.js","sourcesContent":["import { List } from \"immutable\";\r\n\r\nexport const selectEntities = state => state.app.get('entity');\r\n\r\nexport const selectGroups = (state, id) => state.app.getIn(['sets', 'groups', id]) || new List();\r\n\r\nexport const selectGroupsArray = (state, id) => state.app.getIn(['sets', 'groups', id]).toJs() || [];\r\n\r\nexport const selectGroupAttributes = (state, id) => state.app.getIn(['groups', 'attributes', id, 'data']) || new List();\r\n\r\nexport const selectAttributes = (state, code) => state.app.getIn(['attributes', 'data', code]) || new List();\r\n","import React from 'react';\r\nimport { Icon } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst Spin = styled.div`\r\n  height: 50vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FallbackLoading = () => {\r\n    return (\r\n        <Spin>\r\n            <Icon type=\"loading\" style={{ fontSize: '30px', color: '#9f38ec' }} />\r\n        </Spin>\r\n    );\r\n};\r\n\r\nexport default FallbackLoading;","export * from './cockpit';\r\nexport * from './entity';","import React, { PureComponent } from 'react';\r\nimport { Layout, Row, Col, Icon, Menu, Dropdown } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport { sideBarState } from '../selectors';\r\nimport { toogleSideBar, openDrawer } from '../actions';\r\n\r\nconst MenuIcon = styled(Icon)`\r\n  font-size: 18px;\r\n  line-height: 64px;\r\n  padding: 0 24px;\r\n  cursor: pointer;\r\n  transition: color .3s;\r\n`;\r\n\r\nconst DropdownWrapper = styled(Dropdown)`\r\n    margin-right: 2rem;\r\n`;\r\n\r\nconst HeaderWrapper = styled(Layout.Header)`\r\n    background: #fff;\r\n    padding: 0;\r\n`;\r\n\r\nclass Header extends PureComponent {\r\n    render() {\r\n\r\n        const menu = (\r\n            <Menu selectedKeys={[]} onClick={({key}) => this.props.dispatch(openDrawer(key))}>\r\n                <Menu.Item key=\"newAttribute\">\r\n                    <span>New Attribute</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"newAttributeSet\">\r\n                    <span>New Attribute Set</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"newAttributeGroup\">\r\n                    <span>New Attribute Group</span>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <HeaderWrapper>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Row type=\"flex\" justify=\"start\" align=\"middle\">\r\n                            <MenuIcon\r\n                                type={this.props.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                                onClick={() => this.props.dispatch(toogleSideBar())}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={12} style={{ display: 'none' }}>\r\n                        <Row type=\"flex\" justify=\"end\" align=\"middle\">\r\n                            <DropdownWrapper overlay={menu}>\r\n                                <MenuIcon type=\"plus\" />\r\n                            </DropdownWrapper> \r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </HeaderWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps  = (state) => {\r\n    return {\r\n        collapsed: sideBarState(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React, { memo } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport { matchPath } from 'react-router';\r\nimport { push } from 'connected-react-router';\r\n\r\nimport { sideBarState, getLocation } from '../selectors/cockpit';\r\nimport { ResponsiveContext } from \"../contexts/Responsive\";\r\n\r\nconst Logo = styled.div`\r\n  height: 32px;\r\n  color: #000;\r\n  margin: 14px;\r\n  text-align: center;\r\n  font-size: 1.75rem;\r\n  font-weight: lighter;\r\n`;\r\n\r\nconst menuLinks = {\r\n    1: '/entity',\r\n    2: '/attributes',\r\n}\r\n\r\nconst SideBar = memo((props) => {\r\n    const onMenuSelect = ({ item, key, keyPath }) => {        \r\n        props.dispatch(push(menuLinks[key]));\r\n    }\r\n\r\n    const getSelectedKey = () => {\r\n\r\n        const found = Object.keys(menuLinks).find((item) => {\r\n            const match  = matchPath(props.location.pathname, {\r\n                path: menuLinks[item],\r\n                exact: true,\r\n            });\r\n\r\n            return (match && true) || false;\r\n        });        \r\n\r\n        return (found && [found]) || ['1'];\r\n    }\r\n    return (\r\n        <ResponsiveContext.Consumer>\r\n            {(size) => (\r\n                <Layout.Sider\r\n                    theme=\"light\"\r\n                    trigger={null}\r\n                    collapsible\r\n                    collapsed={ size === 'small' ? true : props.collapsed }\r\n                    >\r\n                    <Logo>EAV</Logo>\r\n                    <Menu theme=\"light\" mode=\"inline\" selectedKeys={getSelectedKey()} onSelect={onMenuSelect}>\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"database\" />\r\n                            <span>Entities</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Icon type=\"profile\" />\r\n                            <span>Attributes</span>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Layout.Sider>\r\n            )}\r\n        </ResponsiveContext.Consumer>\r\n    );\r\n});\r\n\r\nconst mapStateToProps  = (state) => {\r\n    return {\r\n        collapsed: sideBarState(state),\r\n        location: getLocation(state),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SideBar);","import React, { PureComponent, Suspense, lazy } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Layout } from 'antd';\nimport { Route, Switch, Redirect, withRouter } from 'react-router';\nimport styled from 'styled-components';\n\nimport Header from '../components/Header';\nimport SideBar from '../components/SideBar';\nimport FallbackLoading from '../components/FallbackLoading';\n\nimport { ResponsiveContext } from '../contexts/Responsive';\n\nimport { getBreakpoint, getDeviceBreakpoint } from '../utils/common';\n\nconst GloableDrawer = lazy(() => import('../components/GloableDrawer' /* webpackChunkName: \"gloableDrawer\" */));\nconst Entity = lazy(() => import('./Entity' /* webpackChunkName: \"entity\" */));\nconst Attributes = lazy(() => import('./Attributes' /* webpackChunkName: \"attributes\" */));\n\nconst Content = styled(Layout.Content)`\n  margin: 24px 16px;\n  padding: 24px;\n  background: #fff;\n  min-height: 280px;\n`;\n\nclass App extends PureComponent {\n  state = {};\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onResize);\n    this.onResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onResize = () => {\n\n    const { responsive } = this.state;\n\n    const baseSpacing  = 24;\n    const breakpoints = {\n      small: {\n        value: baseSpacing * 32, // 1536\n      },\n      medium: {\n        value: baseSpacing * 64, // 1536\n      },\n      large: {}, // anything above 'medium'\n    };\n\n    const breakpoint = getBreakpoint(window.innerWidth, breakpoints);\n\n    if (breakpoint !== responsive) {\n      this.setState({ responsive: breakpoint });\n    }\n  };\n\n  deviceResponsive = () => {\n    const { userAgent } = this.props;\n\n    const deviceBreakpoints = {\n      phone: 'small',\n      tablet: 'medium',\n      computer: 'large',\n    };\n\n    /*\n     * Regexes provided for mobile and tablet detection are meant to replace\n     * a full-featured specific library due to contributing a considerable size\n     * into the bundle.\n     *\n     * User agents found https://deviceatlas.com/blog/list-of-user-agent-strings\n     */\n    if (userAgent) {\n      if (\n        /(tablet|ipad|playbook|silk)|(android(?!.*mobile))/i.test(userAgent)\n      ) {\n        return getDeviceBreakpoint('tablet', deviceBreakpoints);\n      }\n      if (/Mobile|iPhone|Android/.test(userAgent)) {\n        return getDeviceBreakpoint('phone', deviceBreakpoints);\n      }\n      return getDeviceBreakpoint('computer', deviceBreakpoints);\n    }\n    return undefined;\n  }\n  \n  render() {\n\n    const { responsive: stateResponsive } = this.state;\n    // Value from state should be correct once we resize\n    // On first render we try to guess otherwise set the default as a tablet\n    const responsive =\n      stateResponsive ||\n      this.deviceResponsive() ||\n      'medium';\n\n    return (\n      <ResponsiveContext.Provider value={responsive}>\n        <Layout style={{ minHeight: '100vh' }}>\n          <SideBar />\n          <Layout>\n            <Header />\n            <Content> \n              <Suspense fallback={<FallbackLoading />}>\n                <Switch>\n                    <Route exact path=\"/\" render={() => (<Redirect to=\"/entity\"/>)} />\n                    <Route exact path=\"/entity\" render={() => (<Entity />)} />\n                    <Route exact path=\"/attributes\" render={() => (<Attributes />)} />\n                    <Route render={() => (<Redirect to=\"/\"/>)} />\n                </Switch>\n              </Suspense>\n              <Suspense fallback={<span>&nbsp;</span>}>\n                  <GloableDrawer />\n              </Suspense>            \n            </Content>           \n          </Layout>      \n        </Layout>\n      </ResponsiveContext.Provider>    \n    );\n  }\n}\n\nexport default hot(withRouter(App));\n","import { fromJS } from 'immutable';\r\nimport { listEntities, saveEntity, expandTable } from '../actions';\r\n\r\nexport const initialEntityState = {\r\n    entity: {\r\n        data: [],\r\n        loading: false,\r\n        errors: null,\r\n        links: null,\r\n        meta: null,\r\n        expandedRowKeys: [],\r\n    }\r\n};\r\n\r\nexport const entityReducers  = {\r\n  [listEntities.TRIGGER]: (state, action) => state.updateIn([ 'entity', 'loading' ], value => true),\r\n  [listEntities.SUCCESS]: (state, action) => { \r\n      return state.updateIn([ 'entity', 'data' ], value => fromJS(action.payload.data))\r\n        .updateIn([ 'entity', 'links' ], value => action.payload.links)\r\n        .updateIn([ 'entity', 'meta' ], value => action.payload.meta);\r\n  },\r\n  [listEntities.FAILURE]: (state, action) => state.updateIn([ 'entity', 'errors' ], value => action.payload),\r\n  [listEntities.FULFILL]: (state, action) => state.updateIn([ 'entity', 'loading' ], value => false),\r\n  [saveEntity]: (state, action) => { \r\n      return state;\r\n  },\r\n  [expandTable]: (state, action) => {\r\n    if(action.payload.type !== 'entity') return state; \r\n    return state.updateIn([ 'entity', 'expandedRowKeys' ], value => fromJS(action.payload.keys));\r\n  },\r\n};\r\n","import { fromJS } from 'immutable';\r\nimport { saveAttributes, getAttributes, addAttributes, updateAttribute } from '../actions';\r\n\r\nexport const initialAttributeState = {\r\n    attributes: {\r\n        data: {},\r\n        links: null,\r\n        meta: null,\r\n        loading: false,\r\n        errors: null,\r\n    }\r\n};\r\n\r\nexport const attributeReducers  = {\r\n  [getAttributes.TRIGGER]: (state, action) => state.updateIn([ 'attributes', 'loading' ], value => true),\r\n  [getAttributes.SUCCESS]: (state, action) => {\r\n    return state.updateIn([ 'attributes', 'data' ], value => value.set(action.payload.params.entity, fromJS(action.payload.data)))\r\n                .updateIn([ 'attributes', 'links' ], value => action.payload.links)\r\n                .updateIn([ 'attributes', 'meta' ], value => action.payload.meta);\r\n  },\r\n  [getAttributes.FAILURE]: (state, action) => state.updateIn([ 'attributes', 'errors' ], value => action.payload),\r\n  [getAttributes.FULFILL]: (state, action) => state.updateIn([ 'attributes', 'loading' ], value => false),\r\n  [saveAttributes]: (state, action) => { \r\n    return state.updateIn([ 'attributes', 'data', action.payload.entity ], value => fromJS(action.payload.attributes));\r\n  },\r\n  [addAttributes]: (state, action) => {\r\n\r\n    if(state.getIn([ 'attributes', 'data', action.payload.entity ])) {\r\n      return state.updateIn([ 'attributes', 'data', action.payload.entity ], value => value.push(fromJS(action.payload.data.data)));\r\n    }\r\n\r\n    return state.updateIn([ 'attributes', 'data' ], value => value.set(action.payload.entity, fromJS([action.payload.data.data])))\r\n                .updateIn([ 'attributes', 'links' ], value => action.payload.data.links);\r\n  },\r\n\r\n  [updateAttribute]: (state, action) => {\r\n    return state.updateIn([ 'attributes', 'data', action.payload.entity ], value => value.set(action.payload.attribute, fromJS(action.payload.data.data)));\r\n  },\r\n};\r\n","import { fromJS } from 'immutable';\r\nimport { updateSet, reorderSet, listGroups, removeGroup } from '../actions';\r\n\r\nexport const initialSetState = {\r\n    sets: {\r\n        groups: {},\r\n        loading: false,\r\n        errors: null,\r\n        links: null,\r\n        meta: null,\r\n    }\r\n};\r\n\r\nexport const setReducers  = {\r\n\r\n  [listGroups.TRIGGER]: (state, action) => state.updateIn([ 'sets', 'loading' ], value => true),\r\n  [listGroups.SUCCESS]: (state, action) => { \r\n      return state.updateIn([ 'sets', 'groups' ], value => value.set(action.payload.params.set, fromJS(action.payload.data)))\r\n        .updateIn([ 'sets', 'links' ], value => action.payload.links)\r\n        .updateIn([ 'sets', 'meta' ], value => action.payload.meta);\r\n  },\r\n  [listGroups.FAILURE]: (state, action) => state.updateIn([ 'sets', 'errors' ], value => action.payload),\r\n  [listGroups.FULFILL]: (state, action) => state.updateIn([ 'sets', 'loading' ], value => false),\r\n\r\n  [reorderSet]: (state, action) => { \r\n    return state.updateIn([ 'sets', 'groups', action.payload.set], value => fromJS(action.payload.groups))\r\n  },\r\n  \r\n  [updateSet]: (state, action) => {\r\n\r\n    if(action.payload.params.group) {\r\n      return state.updateIn([ 'sets', 'groups', action.payload.params.set, action.payload.params.updateIndex ], value => fromJS(action.payload.data));\r\n    }\r\n\r\n    return state.updateIn([ 'sets', 'groups', action.payload.params.set ], value => value.push(fromJS(action.payload.data)));\r\n  },\r\n\r\n  [removeGroup]: (state, action) => {\r\n\r\n    return state.updateIn([ 'sets', 'groups', action.payload.set ], value => value.delete(action.payload.removeIndex));\r\n  },\r\n};\r\n","import { fromJS } from 'immutable';\r\nimport { listGroupsAttributes, saveGroupAttributes, getGroup, saveGroup } from '../actions';\r\n\r\nexport const initialGroupState = {\r\n    groups: {\r\n        form: {\r\n          loading: false,\r\n          errors: null,\r\n          request: null,\r\n        },\r\n        data: {},\r\n        attributes: {},\r\n        loading: false,\r\n        errors: null,\r\n        links: null,\r\n        meta: null,\r\n    },\r\n};\r\n\r\nfunction getMockData() {\r\n  return {\r\n    data: [],\r\n    loading: true,\r\n    errors: null,\r\n  };\r\n}\r\n\r\nexport const groupReducers  = {\r\n  [getGroup.TRIGGER]: (state, action) => state.updateIn([ 'groups', 'loading' ], value => true),\r\n  [getGroup.SUCCESS]: (state, action) => state.updateIn([ 'groups', 'data' ], value => value.set(action.payload.data.id, fromJS(action.payload.data))),\r\n  [getGroup.FAILURE]: (state, action) => state.updateIn([ 'groups', 'errors' ], value => action.payload),\r\n  [getGroup.FULFILL]: (state, action) => state.updateIn([ 'groups', 'loading' ], value => false),\r\n\r\n  [saveGroup]: (state, action) => {\r\n    return state.updateIn([ 'groups', 'data', action.payload.id ], value => action.payload.group);\r\n  },\r\n\r\n  [listGroupsAttributes.TRIGGER]: (state, action) => state.updateIn([ 'groups', 'attributes' ], value => value.set(action.payload.params.group, fromJS(getMockData()))),\r\n  [listGroupsAttributes.SUCCESS]: (state, action) => state.updateIn([ 'groups', 'attributes', action.payload.params.group ], value => value.set('data', fromJS(action.payload.data))),\r\n  [listGroupsAttributes.FAILURE]: (state, action) => state.updateIn([ 'groups', 'attributes', action.payload.params.group ], value => value.set('errors', action.payload)),\r\n  [listGroupsAttributes.FULFILL]: (state, action) => state.updateIn([ 'groups', 'attributes', action.payload.params.group ], value => value.set('loading', false)),\r\n\r\n  [saveGroupAttributes]: (state, action) => state.updateIn([ 'groups', 'attributes', action.payload.id, 'data' ], value => fromJS(action.payload.attributes)),\r\n\r\n};\r\n","import { toogleSideBar, openDrawer, closeDrawer, updateListPageNo, dataChanged, selectedEntity } from '../actions';\r\n\r\nexport const initialCockpitState = {\r\n    cockpit: {\r\n        sidebar: {\r\n            open: false,\r\n        },\r\n        globalDrawer: {\r\n            open: false,\r\n            current: null\r\n        },\r\n        list: {\r\n            entity: {\r\n                current: 1,\r\n                size: 10\r\n            },\r\n            attributes: {\r\n                current: 1,\r\n                size: 10,\r\n                entity: null,\r\n            }\r\n        },\r\n        hasChanges: {\r\n            entityViewer : false\r\n        }\r\n    }\r\n};\r\n\r\nexport const cockpitReducers  = {\r\n    [toogleSideBar]: (state, action) => state.updateIn([ 'cockpit', 'sidebar', 'open' ], value => !value),\r\n    [openDrawer]: (state, action) => {\r\n        return state.updateIn([ 'cockpit', 'globalDrawer', 'open' ], value => true)\r\n            .updateIn([ 'cockpit', 'globalDrawer', 'current' ], value => action.payload);\r\n    },\r\n    [closeDrawer]: (state, action) => {\r\n        return state.updateIn([ 'cockpit', 'globalDrawer', 'open' ], value => false)\r\n        .updateIn([ 'cockpit', 'globalDrawer', 'current' ], value => null);\r\n    },\r\n    [updateListPageNo]: (state, action) => {\r\n        return state.updateIn([ 'cockpit', 'list', action.payload.type, 'current' ], value => action.payload.number)\r\n    },\r\n    [dataChanged]: (state, action) => {\r\n        return state.updateIn([ 'cockpit', 'hasChanges', action.payload.type ], value => action.payload.changed)\r\n    },\r\n    [selectedEntity]: (state, action) => {\r\n        return state.updateIn([ 'cockpit', 'list', 'attributes', 'entity' ], value => action.payload)\r\n    }\r\n};\r\n  ","import { fromJS } from 'immutable';\r\nimport { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { handleActions  } from 'redux-actions';\r\nimport { initialEntityState, entityReducers } from './entity';\r\nimport { initialAttributeState, attributeReducers } from './attribute';\r\nimport { initialSetState, setReducers } from './set';\r\nimport { initialGroupState, groupReducers } from './group';\r\nimport { initialCockpitState, cockpitReducers } from './cockpit';\r\n\r\nconst app = handleActions({\r\n    ...entityReducers,\r\n    ...attributeReducers,\r\n    ...setReducers,\r\n    ...groupReducers,\r\n    ...cockpitReducers\r\n}, fromJS({\r\n    ...initialEntityState,\r\n    ...initialAttributeState,\r\n    ...initialSetState,\r\n    ...initialGroupState,\r\n    ...initialCockpitState\r\n}));\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    app,\r\n});","import { all, fork, call, put, takeLatest } from 'redux-saga/effects'\r\nimport { listEntities } from '../actions';\r\nimport { fetchEnities } from '../utils/WebAPI';\r\n\r\nfunction* fetchAllEntities(data) {\r\n  try {\r\n    // trigger request action\r\n    yield put(listEntities.request());\r\n    const response = yield call(fetchEnities, data.payload.query||{});\r\n    // if request successfully finished\r\n    yield put(listEntities.success(response));\r\n  } catch (error) {\r\n    // if request failed\r\n    yield put(listEntities.failure(error));\r\n  } finally {\r\n    // trigger fulfill action\r\n    yield put(listEntities.fulfill());\r\n  }\r\n}\r\n\r\nfunction* listEntitiesWatcher() {\r\n  yield takeLatest(listEntities.TRIGGER, fetchAllEntities)\r\n}\r\n\r\nexport default function* entityWatcherSaga() {\r\n    yield all([\r\n      fork(listEntitiesWatcher)\r\n    ]);    \r\n}","import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { delay } from 'redux-saga';\r\nimport { getAttributes } from '../actions';\r\nimport { fetchAttributes } from '../utils/WebAPI';\r\n\r\nfunction* attributeWatcher(data) {\r\n  \r\n  yield delay(500);\r\n\r\n  try {\r\n    // trigger request action\r\n    yield put(getAttributes.request());\r\n    const response = yield call(fetchAttributes, data.payload.params||{}, data.payload.query||{});\r\n    // if request successfully finished\r\n    yield put(getAttributes.success(response));\r\n  } catch (error) {\r\n    // if request failed\r\n    yield put(getAttributes.failure(error));\r\n  } finally {\r\n    // trigger fulfill action\r\n    yield put(getAttributes.fulfill());\r\n  }\r\n}\r\n\r\nfunction* listSets() {\r\n  yield takeLatest(getAttributes.TRIGGER, attributeWatcher)\r\n}\r\n\r\nexport default function* attributeWatcherSaga() {\r\n    yield all([\r\n      fork(listSets)\r\n    ]);    \r\n}","import { all, fork, call, put, takeEvery } from 'redux-saga/effects'\r\nimport { listGroups, listGroupsAttributes } from '../actions';\r\nimport { fetchGroups, fetchGroupsAttributes } from '../utils/WebAPI';\r\n\r\nfunction* listGroupWatcher(data) {\r\n  try {\r\n    // trigger request action\r\n    yield put(listGroups.request());\r\n    const response = yield call(fetchGroups, data.payload.params||{}, data.payload.query||{});\r\n    // if request successfully finished\r\n    yield put(listGroups.success(response));\r\n  } catch (error) {\r\n    // if request failed\r\n    yield put(listGroups.failure(error));\r\n  } finally {\r\n    // trigger fulfill action\r\n    yield put(listGroups.fulfill());\r\n  }\r\n}\r\n\r\nfunction* listGroupsW() {\r\n  yield takeEvery(listGroups.TRIGGER, listGroupWatcher)\r\n}\r\n\r\nfunction* listGroupAttrWatcher(data) {\r\n  try {\r\n    // trigger request action\r\n    yield put(listGroupsAttributes.request());\r\n    const response = yield call(fetchGroupsAttributes, data.payload.params||{}, data.payload.query||{});\r\n    // if request successfully finished\r\n    yield put(listGroupsAttributes.success(response));\r\n  } catch (error) {\r\n    // if request failed\r\n    yield put(listGroupsAttributes.failure(error));\r\n  } finally {\r\n    // trigger fulfill action\r\n    yield put(listGroupsAttributes.fulfill({ params: data.payload.params }));\r\n  }\r\n}\r\n\r\nfunction* listGroupAttr() {\r\n  yield takeEvery(listGroupsAttributes.TRIGGER, listGroupAttrWatcher)\r\n}\r\n\r\nexport default function* groupWatcherSaga() {\r\n    yield all([\r\n      fork(listGroupsW),\r\n      fork(listGroupAttr)\r\n    ]);    \r\n}","import { all, fork, put, takeLatest, select, call } from 'redux-saga/effects';\r\nimport { push, LOCATION_CHANGE } from 'connected-react-router';\r\nimport { parse, stringify } from 'query-string';\r\nimport { dataChanged, reorderSet, saveGroupAttributes, updateListPageNo, expandTable, selectedEntity } from '../actions';\r\nimport { getLocation } from '../selectors/cockpit';\r\n\r\nfunction* groupUpdateWatcher(data) {\r\n    yield put(dataChanged({ type: 'entityViewer', changed: true}));\r\n}\r\n\r\nfunction* groupUpdate() {\r\n  yield takeLatest([reorderSet, saveGroupAttributes], groupUpdateWatcher)\r\n}\r\n\r\nfunction* routerChangesWatcher(data) {\r\n\r\n  if(data.payload.routerIgnore) return;\r\n\r\n  let { pathname, search }  = yield select(getLocation);\r\n\r\n  const parsed = yield call(parse, search, {arrayFormat: 'bracket'});\r\n\r\n  if(data.type === expandTable.toString()) {\r\n\r\n    search = yield call(stringify, Object.assign(parsed, { expand: data.payload.keys }), { arrayFormat: 'bracket' });\r\n    \r\n    yield put(push(`${pathname}?${search}`));\r\n  }\r\n\r\n  if(data.type === updateListPageNo.toString()) {\r\n\r\n    search = yield call(stringify, Object.assign(parsed, { page: data.payload.number }), { arrayFormat: 'bracket' });\r\n    \r\n    yield put(push(`${pathname}?${search}`));\r\n  }\r\n}\r\n\r\nfunction* watchRouterChanges() {\r\n  yield takeLatest([expandTable, updateListPageNo], routerChangesWatcher)\r\n}\r\n\r\nfunction* locationChangesWatcher(data) {\r\n\r\n  let { pathname, search }  = yield select(getLocation);\r\n  const parsed = yield call(parse, search, {arrayFormat: 'bracket'});\r\n\r\n  if(pathname === '/entity') {\r\n    yield put(expandTable({ type: 'entity', keys: parsed.expand || [], routerIgnore: true }));\r\n    yield put(updateListPageNo({ type: 'entity', number: parseInt(parsed.page) || 1, routerIgnore: true }));\r\n  }\r\n\r\n  if(pathname === '/attributes') {\r\n    yield put(selectedEntity(parsed.entity));\r\n    yield put(updateListPageNo({ type: 'attributes', number: parseInt(parsed.page) || 1, routerIgnore: true }));\r\n  }\r\n}\r\n\r\nfunction* watchLocationChanges() {\r\n  yield takeLatest(LOCATION_CHANGE, locationChangesWatcher)\r\n}\r\n\r\nexport default function* cockpitWatcherSaga() {\r\n    yield all([\r\n      fork(groupUpdate),\r\n      fork(watchLocationChanges),\r\n      fork(watchRouterChanges),\r\n    ]);    \r\n}","import { all, fork } from 'redux-saga/effects';\r\nimport entitySaga from './entity';\r\nimport attributeWatcherSaga from './attribute';\r\nimport groupWatcherSaga from './group';\r\nimport cockpitWatcherSaga from './cockpit';\r\n\r\n// use them in parallel\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(entitySaga),\r\n        fork(attributeWatcherSaga),\r\n        fork(groupWatcherSaga),\r\n        fork(cockpitWatcherSaga),\r\n    ]);\r\n};","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createRootReducer from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default function configureStore(initialState = {}, history) {\r\n    const middlewares = [sagaMiddleware, routerMiddleware(history)];\r\n\r\n    const enhancers = [applyMiddleware(...middlewares)];\r\n\r\n    // If Redux DevTools Extension is installed use it, otherwise use Redux compose\r\n    /* eslint-disable no-underscore-dangle, indent */\r\n    const composeEnhancers =\r\n        process.env.NODE_ENV !== 'production' &&\r\n        typeof window === 'object' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({trace: true, traceLimit: 25})\r\n            : compose;\r\n    /* eslint-enable */\r\n\r\n    const store = createStore(\r\n        createRootReducer(history),\r\n        initialState,\r\n        composeEnhancers(...enhancers),\r\n    );\r\n\r\n    // Extensions\r\n    sagaMiddleware.run(rootSaga);\r\n\r\n    return store;\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory as createHistory }  from 'history';\r\nimport App from './containers/App';\r\nimport configureStore from './configureStore';\r\nimport createRootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst history = createHistory({\r\n    basename: `${process.env.REACT_APP_URL}`,\r\n});\r\nconst store = configureStore(initialState, history);\r\n\r\nexport default function Root() {\r\n    return (\r\n        <Provider store={store}>\r\n            <ConnectedRouter history={history}>\r\n                <App />                \r\n            </ConnectedRouter>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nif (module.hot) {\r\n    module.hot.accept('./reducers', () => {\r\n        store.replaceReducer(createRootReducer(history))\r\n    })\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createRoutine } from 'redux-saga-routines';\r\nimport { createAction } from 'redux-actions';\r\n\r\nexport const toogleSideBar = createAction('MENU/TOOGLE');\r\n\r\nexport const dataChanged = createAction('DATA/CHANGED');\r\n\r\nexport const openDrawer = createAction('DRAWER/OPEN');\r\n\r\nexport const closeDrawer = createAction('DRAWER/CLOSE');\r\n\r\nexport const expandTable = createAction('EXPAND/TABLE');\r\n\r\nexport const updateListPageNo = createAction('SAVE/LISTPAGENO');\r\n\r\nexport const selectedEntity = createAction('SELECTED/ENTITIY');\r\n\r\nexport const listEntities = createRoutine('LIST/ENTITIES');\r\n\r\nexport const getEntity = createRoutine('GET/ENTITY');\r\n\r\nexport const saveEntity = createAction('SAVE/ENTITY');\r\n\r\nexport const persistEntity = createRoutine('PERSIST/ENTITIES');\r\n\r\nexport const getAttributes = createRoutine('GET/ATTRIBUTES');\r\n\r\nexport const saveAttributes = createAction('SAVE/ATTRIBUTES');\r\n\r\nexport const addAttributes = createAction('ADD/ATTRIBUTES');\r\n\r\nexport const updateAttribute = createAction('UPDATE/ATTRIBUTE');\r\n\r\nexport const getSet = createRoutine('GET/SET');\r\n\r\nexport const saveSet = createAction('SAVE/SET');\r\n\r\nexport const updateSet = createAction('UPDATE/SET');\r\n\r\nexport const reorderSet = createAction('REORDER/SET');\r\n\r\nexport const getGroup = createRoutine('GET/GROUP');\r\n\r\nexport const removeGroup = createAction('DELETE/GROUP');\r\n\r\nexport const listGroups = createRoutine('LIST/GROUP');\r\n\r\nexport const listGroupsAttributes = createRoutine('LIST/GROUP/ATTRIBUTES');\r\n\r\nexport const saveGroupAttributes = createAction('SAVE/GROUP/ATTRIBUTES');\r\n\r\nexport const saveGroup = createAction('SAVE/GROUP');\r\n\r\n","// eslint-disable-next-line no-unused-vars\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const sideBarState = state => state.app.getIn(['cockpit', 'sidebar', 'open' ]);\r\n\r\nexport const drawerState = state => state.app.getIn(['cockpit', 'globalDrawer', 'open' ]);\r\n\r\nexport const drawerData = state => state.app.getIn(['cockpit', 'globalDrawer', 'current' ]);\r\n\r\nexport const selectListPageNo = (type, state) => state.app.getIn([ 'cockpit', 'list', type, 'current' ]);\r\n\r\nexport const selectListSize = (type, state) => state.app.getIn([ 'cockpit', 'list', type, 'size' ]);\r\n\r\nexport const selectCurrentEntity = state => state.app.getIn([ 'cockpit', 'list', 'attributes', 'entity' ]);\r\n\r\nexport const selectExpandedRow = (type, state) => state.app.getIn([ type, 'expandedRowKeys' ]);\r\n\r\nexport const hasChanges = (state, type) => state.app.getIn([ 'cockpit', 'hasChanges', type]);\r\n\r\nexport const getLocation = (state) => state.router.location;\r\n\r\n","export default {\r\n    'base_url': `${process.env.REACT_APP_API_URL}api/eav/`,\r\n    urls: {\r\n        'list_enitity': 'entities',       \r\n        'list_group': 'entities/{entity}/set/{set}/group',\r\n        'list_group_attributes': 'entities/{entity}/set/{set}/group/{group}/attributes',\r\n        'create_group': 'entities/{entity}/set/{set}/group',\r\n        'update_group': 'entities/{entity}/set/{set}/group/{group}',\r\n        'delete_group': 'entities/{entity}/set/{set}/group/{group}',\r\n        'list_attributes': 'entities/{entity}/attributes',\r\n        'create_attribute': 'entities/{entity}/attributes',\r\n        'fetch_attribute': 'entities/{entity}/attributes/{code}',\r\n        'update_attribute': 'entities/{entity}/attributes/{code}',\r\n        'delete_attribute': 'entities/{entity}/attributes/{code}',\r\n        'list_set': 'entities/{entity}/set',\r\n        'create_set': 'entities/{entity}/set',\r\n        'update_set': 'entities/{entity}/set/{set}',\r\n        'update_set_group': 'entities/{entity}/set/{set}/regroup',\r\n        'delete_set': 'entities/{entity}/set/{set}',\r\n        'backend_type': 'backend/types',\r\n        'frontend_type': 'frontend/types',\r\n        'select_sources': 'select/sources',\r\n    }   \r\n};","import config from \"../config\";\r\n\r\nexport const expand = (template, values) => {\r\n    var sep = '{}';\r\n    var len = sep.length;\r\n\r\n    var whitespace = '\\\\s*';\r\n    var left = escape(sep.substring(0, len / 2)) + whitespace;\r\n    var right = whitespace + escape(sep.substring(len / 2, len));\r\n\r\n    function escape (s) {\r\n        return [].map.call(s, function (char) {\r\n            return '\\\\' + char;\r\n        }).join('');\r\n    }\r\n\r\n    function regExp (key) {\r\n        return new RegExp(left + key + right, 'g');\r\n    }\r\n\r\n    Object.keys(values).forEach(function (key) {\r\n        var value = String(values[key]).replace(/\\$/g, '$$$$');\r\n        template = template.replace(regExp(key), value);\r\n    });\r\n\r\n    return template;\r\n}\r\n\r\nexport const url = (key, params = {}) => {\r\n    if(config.urls && config.urls[key]) {\r\n        return `${config.base_url}${expand(config.urls[key], params)}`;\r\n    }\r\n    return `${config.base_url}/${expand(key, params)}`;\r\n};\r\n\r\nexport const urlWithQuery = (url, params) => {\r\n    if(Object.keys(params).length === 0) return url;\r\n    const uri = Object\r\n    .keys(params)\r\n    .map(k => {\r\n        if(Array.isArray(params[k])) {\r\n            return params[k]\r\n            .map(val => `${encodeURIComponent(k)}[]=${encodeURIComponent(val)}`)\r\n            .join('&');\r\n        }\r\n        return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;\r\n    })\r\n    .join('&');\r\n\r\n    return `${url}?${uri}`;\r\n};\r\n\r\n/**\r\n * Parses the JSON returned by a network request\r\n *\r\n * @param  {object} response A response from a network request\r\n *\r\n * @return {object}          The parsed JSON, status from the response\r\n */\r\nfunction parseJSON(response) {\r\n    return new Promise((resolve) => {\r\n        if (response.status === 204) {\r\n            return resolve({\r\n                status: response.status,\r\n                ok: response.ok,\r\n            });\r\n        }\r\n\r\n        return response.json()\r\n            .then((json) => resolve({\r\n                status: response.status,\r\n                ok: response.ok,\r\n                json,\r\n            }));\r\n    });\r\n}\r\n  \r\n/**\r\n * Requests a URL, returning a promise\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n *\r\n * @return {Promise}           The request promise\r\n */\r\nexport const request = (url, options = {}) => {\r\n    const csrfToken = document.querySelector('[name=\"csrf-token\"]');\r\n    options.headers = Object.assign(options.headers || {}, csrfToken ? { \"X-CSRF-Token\": csrfToken.content } : {});\r\n    return new Promise((resolve, reject) => {\r\n      fetch(url, options)\r\n        .then(parseJSON)\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return resolve(response.json);\r\n          }\r\n          // extract the error from the server's json\r\n          return reject({  type: 'server', status:response.status, error: response.json.error || response.json });\r\n        })\r\n        .catch((error) => reject({\r\n            type: 'network',\r\n            message: error.message,\r\n        }));\r\n    });\r\n};","\r\nclass Deserialise {\r\n\r\n    included = {};\r\n    types = {};\r\n    data;\r\n\r\n    constructor(json) {\r\n        let { data, included } = json;\r\n\r\n        this.included = this.indexInclude(included);\r\n        this.data = data;\r\n    }\r\n\r\n    run() {\r\n        return this.build(this.data);\r\n    }\r\n\r\n    build(data) {\r\n\r\n        let body = null;\r\n\r\n        if(Array.isArray(data)) {\r\n            // Collection\r\n            body = [];\r\n\r\n            data.forEach((item) => {                       \r\n                body.push(Object.assign(this.normalize(item), this.normalizeRelation(item)));\r\n            });\r\n        } else { \r\n            // Item          \r\n            body = Object.assign(this.normalize(data), this.normalizeRelation(data));\r\n        }\r\n\r\n        return body;\r\n    }\r\n\r\n    normalize(data) {\r\n\r\n        let attributes = data.attributes;\r\n        if(!attributes) {\r\n            attributes = this.included[`${data.type}-${data.id}`];\r\n        }\r\n\r\n        const normalized = Object.assign({ type: data.type, id: data.id }, attributes);\r\n\r\n        this.types[data.type] = Object.assign({}, this.types[data.type], { [data.id] : normalized})\r\n\r\n        return normalized;\r\n    }\r\n\r\n    normalizeRelation(data) {\r\n        if(!data.relationships) {\r\n            return null;\r\n        }\r\n\r\n        let relationships = data.relationships;\r\n        let body = {\r\n            relationshipNames: []\r\n        };\r\n\r\n        Object.keys(relationships).forEach((realtion) => {\r\n            body[realtion] = this.build(relationships[realtion].data);\r\n            body['relationshipNames'].push(realtion);\r\n        })\r\n\r\n        return body;        \r\n    }\r\n\r\n    indexInclude(data) {\r\n        if(!data) {\r\n            return {};\r\n        }\r\n\r\n        let collection = {};\r\n\r\n        data.forEach((item) => {\r\n            collection[`${item.type}-${item.id}`] = this.normalize(item);\r\n        });\r\n\r\n        return collection;\r\n    }\r\n}\r\n\r\n\r\nclass Serialise {\r\n    \r\n    relationshipNames;\r\n\r\n    constructor(relationshipNames) {\r\n        this.relationshipNames = relationshipNames;\r\n    }\r\n\r\n    run(data) {\r\n        return this.build(data);\r\n    }\r\n\r\n    build(data) {\r\n        let body = null;\r\n\r\n        if(Array.isArray(data)) {\r\n            // Collection\r\n            body = [];\r\n\r\n            data.forEach((item) => {                       \r\n                body.push(Object.assign(this.normalize(item), this.normalizeRelation(item)));\r\n            });\r\n        } else { \r\n            // Item          \r\n            body = Object.assign(this.normalize(data), this.normalizeRelation(data));\r\n        }\r\n\r\n        return body;\r\n    }\r\n\r\n    normalize(data) {\r\n\r\n        let exceptProps = ['id', 'type', 'relationshipNames', ...this.relationshipNames];\r\n\r\n        let attributes = {};\r\n        Object.keys(data).forEach((attrName) => {\r\n            if (exceptProps.indexOf(attrName) === -1) {\r\n                attributes[attrName] = data[attrName];\r\n            }\r\n        });\r\n\r\n        if(Object.keys(attributes).length) {\r\n            return { type: data.type, id: data.id , attributes };\r\n        }\r\n\r\n        return { type: data.type, id: data.id };\r\n    }\r\n\r\n    normalizeRelation(data) {\r\n\r\n        const relationships = {};\r\n        this.relationshipNames.forEach((relationName) => {\r\n            if (data[relationName] !== undefined) {\r\n                relationships[relationName] = { data: this.build(data[relationName]) };\r\n            }\r\n        });\r\n\r\n        if(Object.keys(relationships).length) {\r\n            return { relationships };\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default class JsonApi {\r\n\r\n    deserialize(json) {\r\n        const deserialiser = new Deserialise(json);\r\n        return deserialiser.run();\r\n    }\r\n\r\n    serialize(data, relationshipNames) {\r\n        const serialiser = new Serialise(relationshipNames);\r\n        return serialiser.run(data);\r\n    }\r\n    \r\n}\r\n","import { request, url, urlWithQuery } from \"./request\";\r\nimport JsonApi from '../utils/jsonapi';\r\n\r\nconst dataFormatter = new JsonApi();\r\n\r\nconst fetchData = (type, params, query) => {\r\n    return request(urlWithQuery(url(type, params), query))\r\n            .then(json => {\r\n                const data = dataFormatter.deserialize(json);\r\n                return Promise.resolve({ \r\n                    data,\r\n                    params,\r\n                    links: json.links,\r\n                    meta: json.meta\r\n                });\r\n            });\r\n};\r\n\r\nexport const fetchEnities = query => {\r\n    return fetchData('list_enitity', {}, query);\r\n};\r\n\r\nexport const fetchSets = (params, query) => {\r\n    return fetchData('list_set', params, query);\r\n};\r\n\r\nexport const fetchGroups = (params, query) => {\r\n    return fetchData('list_group', params, query);\r\n};\r\n\r\nexport const fetchGroupsAttributes = (params, query) => {\r\n    return fetchData('list_group_attributes', params, query);\r\n};\r\n\r\nexport const fetchAttributes = (params, query) => {\r\n    return fetchData('list_attributes', params, query);\r\n};\r\n\r\nexport const fetchAttribute = (params) => {\r\n    return fetchData('fetch_attribute', params, {});\r\n};\r\n\r\nexport const deleteAttribute = (params) => {\r\n    return request(urlWithQuery(url('delete_attribute', params), {}), {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",                    \r\n                }\r\n            })\r\n            .then(json => {\r\n                return Promise.resolve({});\r\n            });\r\n};\r\n\r\nexport const deleteSet = (params) => {\r\n    return request(urlWithQuery(url('delete_set', params), {}), {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",                    \r\n                }\r\n            })\r\n            .then(json => {\r\n                return Promise.resolve({});\r\n            });\r\n};\r\n\r\nexport const deleteGroup = (params) => {\r\n    return request(urlWithQuery(url('delete_group', params), {}), {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",                    \r\n                }\r\n            })\r\n            .then(json => {\r\n                return Promise.resolve({});\r\n            });\r\n};\r\n\r\nconst presistData = (type, params, post, query, method=\"POST\") => {    \r\n    return request(urlWithQuery(url(type, params), query), {\r\n                method,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",                    \r\n                },\r\n                body: JSON.stringify(post),\r\n            })\r\n            .then(json => {\r\n                const data = dataFormatter.deserialize(json);\r\n                return Promise.resolve({ \r\n                    data,\r\n                    params,\r\n                    links: json.links,\r\n                    meta: json.meta\r\n                });\r\n            });\r\n};\r\n\r\n\r\nexport const presistSet = (params, post, query) => {\r\n    return presistData('create_set', params, post, query);\r\n};\r\n\r\nexport const presistExistingSet = (params, post, query) => {\r\n    return presistData('update_set', params, post, query, 'PUT');\r\n};\r\n\r\nexport const presistGroup = (params, post, query) => {\r\n    return presistData('create_group', params, post, query);\r\n};\r\n\r\nexport const presistExistingGroup = (params, post, query) => {\r\n    return presistData('update_group', params, post, query, 'PUT');\r\n};\r\n\r\nexport const presistAttribute = (params, post, query) => {\r\n    return presistData('create_attribute', params, post, query);\r\n};\r\n\r\nexport const presistExistingAttribute = (params, post, query) => {\r\n    return presistData('update_attribute', params, post, query, 'PUT');\r\n};\r\n\r\nexport const presistSetRegroup = (params, post, query) => {\r\n    const postData = { data: dataFormatter.serialize(post, ['attributes']) };    \r\n    return request(urlWithQuery(url('update_set_group', params), query), {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",                    \r\n                },\r\n                body: JSON.stringify(postData),\r\n            })\r\n            .then(json => {\r\n                return Promise.resolve({});\r\n            });\r\n};\r\n\r\nconst fetchConfig = (type) => {\r\n    return request(url(type))\r\n            .then(json => {\r\n                return Promise.resolve({ \r\n                    data:json\r\n                });\r\n            });\r\n};\r\n\r\nexport const fetchBackendTypes = () => {\r\n    return fetchConfig('backend_type');\r\n};\r\n\r\nexport const fetchFrontendTypes = () => {\r\n    return fetchConfig('frontend_type');\r\n};\r\n\r\nexport const fetchSelectSources = () => {\r\n    return fetchConfig('select_sources');\r\n};\r\n","\r\nexport const updateSequence = (collection) => {\r\n    return collection.map((item, index) => {\r\n        return item.set('sequence', index);\r\n    });\r\n};\r\n\r\nexport const getBreakpoint = (windowWidth, breakpoints) => {\r\n    let result;\r\n    Object.keys(breakpoints)\r\n      .sort((a, b) => {\r\n        const first = breakpoints[a];\r\n        const second = breakpoints[b];\r\n        if (!first) return 1;\r\n        if (!second) return -1;\r\n        if (!first.value) return 1;\r\n        if (!second.value) return -1;\r\n        return first.value - second.value;\r\n      })\r\n      .some(name => {\r\n        const breakpoint = breakpoints[name];\r\n        if (breakpoint) {\r\n          if (!breakpoint.value || breakpoint.value >= windowWidth) {\r\n            result = name;\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n    return result;\r\n  };\r\n  \r\n  export const getDeviceBreakpoint = (type, deviceBreakpoints) => deviceBreakpoints[type];\r\n","import React from 'react';\r\n\r\nexport const ResponsiveContext = React.createContext(undefined);"],"sourceRoot":""}