{"version":3,"sources":["components/AddGroup.js"],"names":["AddGroup","state","loading","onSave","_callee","values","hide","post","response","_message2","description","setFields","form","E_Projects_eav_packages_eav_dashboard_resources_js_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default","a","wrap","_context","prev","next","_this","setState","antd_es_message__WEBPACK_IMPORTED_MODULE_10__","data","type","attributes","name","presistGroup","entity","props","set","id","sent","dispatch","updateSet","success","then","close","t0","message","status","error","errors","title","detail","forEach","item","source","pointer","split","length","touched","value","Error","antd_es_notification__WEBPACK_IMPORTED_MODULE_8__","duration","stop","handleSubmit","e","preventDefault","validateFieldsAndScroll","err","this","validateFields","catch","fieldsError","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","nameError","isFieldTouched","react__WEBPACK_IMPORTED_MODULE_17___default","createElement","antd_es_form__WEBPACK_IMPORTED_MODULE_3__","layout","onSubmit","Item","label","initialValue","antd_es_input__WEBPACK_IMPORTED_MODULE_5__","disabled","validateStatus","help","rules","required","placeholder","autoComplete","autoFocus","antd_es_button__WEBPACK_IMPORTED_MODULE_1__","style","marginRight","onClick","htmlType","Object","keys","some","field","PureComponent","WrappedAddGroupForm","create","connect"],"mappings":"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","file":"static/js/addGroup.2db3794b.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { Form, Input, Button, notification, message } from 'antd';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { updateSet } from '../actions';\r\nimport { presistGroup } from '../utils/WebAPI';\r\n\r\nfunction hasErrors(fieldsError) {\r\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\r\n}\r\n  \r\nclass AddGroup extends PureComponent {\r\n\r\n    state = {             \r\n        loading: false,\r\n    };\r\n\r\n    componentDidMount() {        \r\n        this.props.form.validateFields().catch(()=>{});\r\n    }\r\n\r\n    onSave = async (values) => {\r\n\r\n        this.setState((state) => {\r\n            return {\r\n                loading: true,\r\n            } \r\n        });\r\n\r\n        const hide = message.loading('Saving changes..', 0);\r\n\r\n        try {\r\n\r\n            const post = {\r\n                data: {\r\n                    type: 'attribute_group',\r\n                    attributes: {\r\n                       name:  values.name,\r\n                    }\r\n                }\r\n            };\r\n\r\n            const response = await presistGroup({ entity: this.props.entity, set: this.props.set.id }, post, {});\r\n\r\n            this.props.dispatch(updateSet(response));\r\n\r\n            hide();\r\n\r\n            this.setState((state) => {\r\n                return {\r\n                    loading: false,\r\n                } \r\n            });\r\n\r\n            message.success('Changes has been saved.', 1).then(() => {\r\n                this.props.close();\r\n            });           \r\n\r\n        } catch (error) {\r\n\r\n            let message, description;\r\n            if(error.type === 'network') {\r\n                message = 'Network Error';\r\n                description = error.message;\r\n            } \r\n            else if(error.type === 'server' && error.status === 500) {\r\n                message = error.error.errors[0].title;\r\n                description = error.error.errors[0].detail;\r\n            } else {\r\n                const { setFields } = this.props.form;\r\n\r\n                let form = {};\r\n\r\n                error.error.errors.forEach(item => {\r\n                    const source = item.source.pointer.split('/');\r\n                    form[source[source.length-1]] = {\r\n                        touched: true,\r\n                        value: values[source[source.length-1]],\r\n                        errors: [new Error(item.detail)]\r\n                    };\r\n                });\r\n\r\n                setFields(form);\r\n\r\n                message = 'Input Error';\r\n                description = '';\r\n            }\r\n            hide();\r\n\r\n            notification.error({\r\n                message,\r\n                description,\r\n                duration: 0\r\n            });\r\n\r\n            this.setState((state) => {\r\n                return {\r\n                    loading: false,\r\n                } \r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                this.onSave(values);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            getFieldDecorator, getFieldsError, getFieldError, isFieldTouched,\r\n        } = this.props.form;\r\n\r\n        const nameError = isFieldTouched('name') && getFieldError('name');\r\n\r\n        return (\r\n            <Form layout=\"horizontal\" onSubmit={this.handleSubmit}>\r\n                <Form.Item\r\n                    label=\"Entity\"                   \r\n                >\r\n                    {getFieldDecorator('entity', {\r\n                        initialValue: this.props.entity\r\n                    })(\r\n                        <Input disabled />\r\n                    )}                    \r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Set\"                   \r\n                >\r\n                    <Input disabled value={this.props.set.name} />\r\n                    {getFieldDecorator('set', {\r\n                        initialValue: this.props.set.id\r\n                    })(\r\n                        <Input type=\"hidden\" />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Name\"\r\n                    validateStatus={nameError ? 'error' : ''}\r\n                    help={nameError || ''}\r\n                >\r\n                    {getFieldDecorator('name', {\r\n                        rules: [{ required: true, message: 'Please input name!' }],\r\n                    })(\r\n                        <Input placeholder=\"Name\" autoComplete=\"off\" autoFocus/>\r\n                    )}\r\n                </Form.Item>                \r\n                <Form.Item>\r\n                    <Button style={{ marginRight: 8 }} onClick={this.props.close}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        loading={this.state.loading}\r\n                        disabled={hasErrors(getFieldsError())}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedAddGroupForm = Form.create({ name: 'add_group' })(AddGroup);\r\n\r\n\r\nexport default connect()(WrappedAddGroupForm);"],"sourceRoot":""}